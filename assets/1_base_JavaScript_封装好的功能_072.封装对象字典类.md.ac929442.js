import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.681fc4ae.js";const C=JSON.parse('{"title":"键值对字典封装功能类","description":"","frontmatter":{"title":"键值对字典封装功能类"},"headers":[],"relativePath":"1_base_JavaScript/封装好的功能/072.封装对象字典类.md","filePath":"1_base_JavaScript/封装好的功能/072.封装对象字典类.md"}'),p={name:"1_base_JavaScript/封装好的功能/072.封装对象字典类.md"},o=l(`<h3 id="字典功能类" tabindex="-1">字典功能类 <a class="header-anchor" href="#字典功能类" aria-label="Permalink to &quot;字典功能类&quot;">​</a></h3><p>上一个公司项目是一个热力系统，应用的ruoyi框架，里面结合了vue的字典系统，很多下拉框、表格需要应用到字典。 字典有多种，这里介绍两种：</p><ol><li><p>这种字典由对象组成的数组构成，每个对象代表着一个人、公司、单位或者一个管线、阀门、热源，里面有很多属性，比如纳税人识别号、管线UUID、行政区划、所属街道、纳税人编号等。</p></li><li><p>还有一种字典由键值对构成的对象构成，这种字典更像是一种映射关系，接下来总结一下对象字典可能会遇到的需求：</p></li></ol><ul><li>给对象添加键值对</li><li>使用键名查找对象中对应的值，找不到则返回 undefined，找到则返回该值</li><li>使用键名查找对象中对应的值，并且删除该键值对</li><li>提取所有键名，组成新数组（Object.keys（）方法）</li><li>提取所有键名，组成新数组，并且排序</li><li>将对象中的所有键值对转换为字符串，以 &#39; , &#39; 分隔</li><li>将对象中的所有键值对，先排序，再转换为字符串，以 &#39; , &#39; 分隔</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Dictionary</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">constructor</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.dataStore </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {}</span></span>
<span class="line"><span style="color:#E1E4E8;">	}</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//整体赋值</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#B392F0;">addEntire</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">arr</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.dataStore </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> arr</span></span>
<span class="line"><span style="color:#E1E4E8;">	}</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">// add(key, value) 向字典中添加 键值对</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">key</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">value</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.dataStore[key] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> value</span></span>
<span class="line"><span style="color:#E1E4E8;">	}</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">// find(key) 从字典中查找 key 键对应的值，找不到则返回 undefined</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#B392F0;">find</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">key</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.dataStore[key]</span></span>
<span class="line"><span style="color:#E1E4E8;">	}</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">// remove(key) 从字典中删除 key 键</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#B392F0;">remove</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">key</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#F97583;">delete</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.dataStore[key]</span></span>
<span class="line"><span style="color:#E1E4E8;">	}</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">// getKeys() 获取字典中的所有 key</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#B392F0;">getKeys</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> Object.</span><span style="color:#B392F0;">keys</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.dataStore)</span></span>
<span class="line"><span style="color:#E1E4E8;">	}</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">// getKeysSort() 获取字典中的所有 key，并使用 sort 排序</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#B392F0;">getKeysSort</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">getKeys</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">sort</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">	}</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">// count() 返回字典中 键值对 的个数</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#B392F0;">count</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">getKeys</span><span style="color:#E1E4E8;">().</span><span style="color:#79B8FF;">length</span></span>
<span class="line"><span style="color:#E1E4E8;">	}</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">// showAll() 将字典中的所有 键值对 转换为字符串，以 , 分隔</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#B392F0;">showAll</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> res </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">getKeys</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">forEach</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">key</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">			res </span><span style="color:#F97583;">+=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">\`,{key:&#39;\${</span><span style="color:#E1E4E8;">key</span><span style="color:#9ECBFF;">}&#39;,value:&#39;\${</span><span style="color:#79B8FF;">this</span><span style="color:#9ECBFF;">.</span><span style="color:#E1E4E8;">dataStore</span><span style="color:#9ECBFF;">[</span><span style="color:#E1E4E8;">key</span><span style="color:#9ECBFF;">]</span><span style="color:#9ECBFF;">}&#39;}\`</span></span>
<span class="line"><span style="color:#E1E4E8;">		})</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> res.</span><span style="color:#B392F0;">slice</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">	}</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">// showAllSort() 将字典中的所有键按照 sort 排序，</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 之后将所有 键值对 转换为字符串，以 , 分隔</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#B392F0;">showAllSort</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> res </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">getKeys</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">sort</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">forEach</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">key</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">			res </span><span style="color:#F97583;">+=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">\`,{key:&#39;\${</span><span style="color:#E1E4E8;">key</span><span style="color:#9ECBFF;">}&#39;,value:&#39;\${</span><span style="color:#79B8FF;">this</span><span style="color:#9ECBFF;">.</span><span style="color:#E1E4E8;">dataStore</span><span style="color:#9ECBFF;">[</span><span style="color:#E1E4E8;">key</span><span style="color:#9ECBFF;">]</span><span style="color:#9ECBFF;">}&#39;}\`</span></span>
<span class="line"><span style="color:#E1E4E8;">		})</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> res.</span><span style="color:#B392F0;">slice</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">	}</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Dictionary</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">constructor</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.dataStore </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {}</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//整体赋值</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6F42C1;">addEntire</span><span style="color:#24292E;">(</span><span style="color:#E36209;">arr</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.dataStore </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> arr</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">// add(key, value) 向字典中添加 键值对</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(</span><span style="color:#E36209;">key</span><span style="color:#24292E;">, </span><span style="color:#E36209;">value</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.dataStore[key] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> value</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">// find(key) 从字典中查找 key 键对应的值，找不到则返回 undefined</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6F42C1;">find</span><span style="color:#24292E;">(</span><span style="color:#E36209;">key</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.dataStore[key]</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">// remove(key) 从字典中删除 key 键</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6F42C1;">remove</span><span style="color:#24292E;">(</span><span style="color:#E36209;">key</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">delete</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.dataStore[key]</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">// getKeys() 获取字典中的所有 key</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6F42C1;">getKeys</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> Object.</span><span style="color:#6F42C1;">keys</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.dataStore)</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">// getKeysSort() 获取字典中的所有 key，并使用 sort 排序</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6F42C1;">getKeysSort</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">getKeys</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">sort</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">// count() 返回字典中 键值对 的个数</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6F42C1;">count</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">getKeys</span><span style="color:#24292E;">().</span><span style="color:#005CC5;">length</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">// showAll() 将字典中的所有 键值对 转换为字符串，以 , 分隔</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6F42C1;">showAll</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> res </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;&#39;</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">getKeys</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">forEach</span><span style="color:#24292E;">(</span><span style="color:#E36209;">key</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">			res </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">\`,{key:&#39;\${</span><span style="color:#24292E;">key</span><span style="color:#032F62;">}&#39;,value:&#39;\${</span><span style="color:#005CC5;">this</span><span style="color:#032F62;">.</span><span style="color:#24292E;">dataStore</span><span style="color:#032F62;">[</span><span style="color:#24292E;">key</span><span style="color:#032F62;">]</span><span style="color:#032F62;">}&#39;}\`</span></span>
<span class="line"><span style="color:#24292E;">		})</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> res.</span><span style="color:#6F42C1;">slice</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">// showAllSort() 将字典中的所有键按照 sort 排序，</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 之后将所有 键值对 转换为字符串，以 , 分隔</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6F42C1;">showAllSort</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> res </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;&#39;</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">getKeys</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">sort</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">forEach</span><span style="color:#24292E;">(</span><span style="color:#E36209;">key</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">			res </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">\`,{key:&#39;\${</span><span style="color:#24292E;">key</span><span style="color:#032F62;">}&#39;,value:&#39;\${</span><span style="color:#005CC5;">this</span><span style="color:#032F62;">.</span><span style="color:#24292E;">dataStore</span><span style="color:#032F62;">[</span><span style="color:#24292E;">key</span><span style="color:#032F62;">]</span><span style="color:#032F62;">}&#39;}\`</span></span>
<span class="line"><span style="color:#24292E;">		})</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> res.</span><span style="color:#6F42C1;">slice</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>初始化功能类</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">phoneDictionary</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Dictionary</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">phoneDictionary1</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Dictionary</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">phoneDictionary.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;yi&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">13010102020</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">phoneDictionary.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;er&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">13030304040</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">phoneDictionary1.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;yi&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">13010102020</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">phoneDictionary1.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;er&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">13030304040</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">phoneDictionary.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;zhangsan&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">13000001111</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">phoneDictionary.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;lisi&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">13022223333</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">phoneDictionary.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;wangwu&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">13044445555</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">phoneDictionary.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;luliu&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">13066667777</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">phoneDictionary.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;zhaoqi&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">13088889999</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">phoneDictionary</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Dictionary</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">phoneDictionary1</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Dictionary</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">phoneDictionary.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;yi&#39;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">13010102020</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">phoneDictionary.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;er&#39;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">13030304040</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">phoneDictionary1.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;yi&#39;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">13010102020</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">phoneDictionary1.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;er&#39;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">13030304040</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">phoneDictionary.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;zhangsan&#39;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">13000001111</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">phoneDictionary.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;lisi&#39;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">13022223333</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">phoneDictionary.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;wangwu&#39;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">13044445555</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">phoneDictionary.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;luliu&#39;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">13066667777</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">phoneDictionary.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;zhaoqi&#39;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">13088889999</span><span style="color:#24292E;">)</span></span></code></pre></div><p>测试</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// 打印一下字典内容：</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(phoneDictionary)</span></span>
<span class="line"><span style="color:#6A737D;">// 通过找 zhangsan键 返回 对应的值</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">\`phoneDictionary.find(&#39;zhangsan&#39;)\`</span><span style="color:#E1E4E8;">, phoneDictionary.</span><span style="color:#B392F0;">find</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;zhangsan&#39;</span><span style="color:#E1E4E8;">))</span></span>
<span class="line"><span style="color:#6A737D;">// 找不到返回undefined</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">\`phoneDictionary.find(&#39;zhangsan1&#39;)\`</span><span style="color:#E1E4E8;">, phoneDictionary.</span><span style="color:#B392F0;">find</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;zhangsan1&#39;</span><span style="color:#E1E4E8;">))</span></span>
<span class="line"><span style="color:#6A737D;">// 通过键删除</span></span>
<span class="line"><span style="color:#E1E4E8;">phoneDictionary.</span><span style="color:#B392F0;">remove</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;yi&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(phoneDictionary)</span></span>
<span class="line"><span style="color:#6A737D;">// getKeys() 获取字典中的所有 key</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">\`phoneDictionary.getKeys()\`</span><span style="color:#E1E4E8;">, phoneDictionary.</span><span style="color:#B392F0;">getKeys</span><span style="color:#E1E4E8;">())</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">\`phoneDictionary.getKeysSort()\`</span><span style="color:#E1E4E8;">, phoneDictionary.</span><span style="color:#B392F0;">getKeysSort</span><span style="color:#E1E4E8;">())</span></span>
<span class="line"><span style="color:#6A737D;">// count() 返回字典中 键值对 的个数</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">\`phoneDictionary.count()\`</span><span style="color:#E1E4E8;">, phoneDictionary.</span><span style="color:#B392F0;">count</span><span style="color:#E1E4E8;">())</span></span>
<span class="line"><span style="color:#6A737D;">// showAll() 将字典中的所有 键值对 转换为字符串，以 , 分隔</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">\`phoneDictionary.showAll()\`</span><span style="color:#E1E4E8;">, phoneDictionary.</span><span style="color:#B392F0;">showAll</span><span style="color:#E1E4E8;">())</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">\`phoneDictionary.showAllSort()\`</span><span style="color:#E1E4E8;">, phoneDictionary.</span><span style="color:#B392F0;">showAllSort</span><span style="color:#E1E4E8;">())</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(phoneDictionary1)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 打印一下字典内容：</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(phoneDictionary)</span></span>
<span class="line"><span style="color:#6A737D;">// 通过找 zhangsan键 返回 对应的值</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`phoneDictionary.find(&#39;zhangsan&#39;)\`</span><span style="color:#24292E;">, phoneDictionary.</span><span style="color:#6F42C1;">find</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;zhangsan&#39;</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#6A737D;">// 找不到返回undefined</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`phoneDictionary.find(&#39;zhangsan1&#39;)\`</span><span style="color:#24292E;">, phoneDictionary.</span><span style="color:#6F42C1;">find</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;zhangsan1&#39;</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#6A737D;">// 通过键删除</span></span>
<span class="line"><span style="color:#24292E;">phoneDictionary.</span><span style="color:#6F42C1;">remove</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;yi&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(phoneDictionary)</span></span>
<span class="line"><span style="color:#6A737D;">// getKeys() 获取字典中的所有 key</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`phoneDictionary.getKeys()\`</span><span style="color:#24292E;">, phoneDictionary.</span><span style="color:#6F42C1;">getKeys</span><span style="color:#24292E;">())</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`phoneDictionary.getKeysSort()\`</span><span style="color:#24292E;">, phoneDictionary.</span><span style="color:#6F42C1;">getKeysSort</span><span style="color:#24292E;">())</span></span>
<span class="line"><span style="color:#6A737D;">// count() 返回字典中 键值对 的个数</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`phoneDictionary.count()\`</span><span style="color:#24292E;">, phoneDictionary.</span><span style="color:#6F42C1;">count</span><span style="color:#24292E;">())</span></span>
<span class="line"><span style="color:#6A737D;">// showAll() 将字典中的所有 键值对 转换为字符串，以 , 分隔</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`phoneDictionary.showAll()\`</span><span style="color:#24292E;">, phoneDictionary.</span><span style="color:#6F42C1;">showAll</span><span style="color:#24292E;">())</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`phoneDictionary.showAllSort()\`</span><span style="color:#24292E;">, phoneDictionary.</span><span style="color:#6F42C1;">showAllSort</span><span style="color:#24292E;">())</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(phoneDictionary1)</span></span></code></pre></div><p>根据键名查找键值对</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">classarray</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#9ECBFF;">&quot;12345&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;我是12345&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#9ECBFF;">&quot;001&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;我是001&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#9ECBFF;">&quot;002&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;我是002&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#9ECBFF;">&quot;003&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;我是003&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">phoneDictionary3</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Dictionary</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#6A737D;">// 向字典的数据赋值，而且是以对象（属性-值）的形式</span></span>
<span class="line"><span style="color:#E1E4E8;">phoneDictionary3.</span><span style="color:#B392F0;">addEntire</span><span style="color:#E1E4E8;">(classarray)</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(phoneDictionary3)</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(phoneDictionary3.</span><span style="color:#B392F0;">find</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;12345&#39;</span><span style="color:#E1E4E8;">))</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">classarray</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#032F62;">&quot;12345&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;我是12345&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#032F62;">&quot;001&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;我是001&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#032F62;">&quot;002&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;我是002&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#032F62;">&quot;003&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;我是003&#39;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">phoneDictionary3</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Dictionary</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#6A737D;">// 向字典的数据赋值，而且是以对象（属性-值）的形式</span></span>
<span class="line"><span style="color:#24292E;">phoneDictionary3.</span><span style="color:#6F42C1;">addEntire</span><span style="color:#24292E;">(classarray)</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(phoneDictionary3)</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(phoneDictionary3.</span><span style="color:#6F42C1;">find</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;12345&#39;</span><span style="color:#24292E;">))</span></span></code></pre></div>`,11),e=[o];function t(c,r,y,E,i,F){return n(),a("div",null,e)}const d=s(p,[["render",t]]);export{C as __pageData,d as default};
