import{_ as e,o as a,c as l,a as i}from"./app.3162b46d.js";const _=JSON.parse('{"title":"学习路线图","description":"","frontmatter":{"title":"学习路线图"},"headers":[{"level":2,"title":"基础","slug":"基础","link":"#基础","children":[]},{"level":2,"title":"进阶","slug":"进阶","link":"#进阶","children":[]},{"level":2,"title":"框架应用","slug":"框架应用","link":"#框架应用","children":[]},{"level":2,"title":"高级(深度学习)","slug":"高级-深度学习","link":"#高级-深度学习","children":[]},{"level":2,"title":"构架师(广度学习)","slug":"构架师-广度学习","link":"#构架师-广度学习","children":[]}],"relativePath":"articles/other/03.前端学习路线.md"}'),o={name:"articles/other/03.前端学习路线.md"},d=i('<h2 id="基础" tabindex="-1">基础 <a class="header-anchor" href="#基础" aria-hidden="true">#</a></h2><ul><li>HTML</li><li>CSS</li><li>JavaScript基础</li><li>DOM/BOM</li></ul><h2 id="进阶" tabindex="-1">进阶 <a class="header-anchor" href="#进阶" aria-hidden="true">#</a></h2><ul><li>HTMl5</li><li>CSS3</li><li>HTTP协议</li><li>ES6</li></ul><h2 id="框架应用" tabindex="-1">框架应用 <a class="header-anchor" href="#框架应用" aria-hidden="true">#</a></h2><ul><li><p>Vue <a href="https://cn.vuejs.org/" target="_blank" rel="noreferrer">https://cn.vuejs.org/</a></p></li><li><p>TypeScript</p></li><li><p>React <a href="http://react.caibaojian.com.cn/" target="_blank" rel="noreferrer">http://react.caibaojian.com.cn/</a></p></li><li><p>AJAX</p></li></ul><details class="details custom-block"><summary>ajax与Axios的关系</summary><ul><li><code>axios</code> 是通过 <code>Promise</code> 实现对ajax技术的一种封装，就像 <code>jquery</code> 对 <code>ajax</code> 的封装一样，简单来说就是ajax技术实现了局部数据的刷新， <code>axios</code>实现了对ajax的封装，axios有的ajax都有，ajax有的axios不一定有，总结一句话就是axios是ajax，ajax不止axios。</li></ul></details><ul><li>Node.js</li></ul><details class="details custom-block"><summary>Node.js与Node？</summary><p>其实node和nodejs两个概念没有太大差别，我个人认为唯一的区别就是，人们说起node的时候语境更多的是再说node环境，而说nodejs时更多的是在说node是一门可以提供后端能力的技术。本质上来说，node就是nodejs，nodejs就是node。</p><ul><li>简单的说 <code>Node.js</code> 就是运行在服务端的 JavaScript。</li><li><code>Node.js</code> 是一个基于Chrome JavaScript 运行时建立的一个平台。是一个事件驱动I/O服务端JavaScript环境，基于Google的V8引擎，V8引擎执行Javascript的速度非常快，性能非常好。</li><li>node环境基于V8引擎提供了一种可以让JS代码跑在后端的能力，这就是 <code>node</code> 。但是因为npm是产生与node社区，node中也是通过npm来加载模块的，所以有必要说一下他们之间的关系。</li></ul></details><details class="details custom-block"><summary>NPM</summary><p>npm 是 Node.js 官方提供的包管理工具，他已经成了 Node.js 包的标准发布平台，用于 Node.js 包的发布、传播、依赖控制</p></details><details class="details custom-block"><summary>webpack npm node之间关系？</summary><ul><li><code>webpack</code> 是npm生态中的一个模块，我们可以通过全局安装 <code>webpack</code> 来使用 <code>webpack</code> 对项目进行打包；</li><li><code>webpack</code> 的运行依赖于<code> node</code> 的环境，没有 <code>node</code> 是不能打包的，但是 <code>webpack</code> 打包后的项目本身只是前端静态资源和后台没有关系，也就是说不依赖与 <code>node</code> ，只要有后台能力的都可以部署项目。</li><li><code>npm</code> 是于Node社区中产生的，是nodejs的官方包管理工具，当你下载安装好 <code>node</code> 的时候，npm cli就自动安装好了。</li><li>正是因为<code>npm</code> 的包管理，使得项目可以模块化的开发，而模块化的开发带来的这些改进确实大大的提高了我们的开发效率，但是利用它们开发的文件往往需要进行额外的处理才能让浏览器识别，而手动处理又是非常繁琐的，这就是webpack工具存在的意义。</li></ul></details><h2 id="高级-深度学习" tabindex="-1">高级(深度学习) <a class="header-anchor" href="#高级-深度学习" aria-hidden="true">#</a></h2><ul><li>JavaScript高级</li><li>Vue底层</li></ul><h2 id="构架师-广度学习" tabindex="-1">构架师(广度学习) <a class="header-anchor" href="#构架师-广度学习" aria-hidden="true">#</a></h2><p>请转到 <code>08.前端架构师技术栈</code> 查看</p>',15),c=[d];function s(t,r,n,p,h,u){return a(),l("div",null,c)}const j=e(o,[["render",s]]);export{_ as __pageData,j as default};
