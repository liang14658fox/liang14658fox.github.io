import{_ as e,o as l,c as i,a}from"./app.e2b2b6aa.js";const f=JSON.parse('{"title":"阅读需求文档","description":"","frontmatter":{"title":"阅读需求文档"},"headers":[{"level":2,"title":"模块化开发","slug":"模块化开发","link":"#模块化开发","children":[]},{"level":2,"title":"页面元素设计","slug":"页面元素设计","link":"#页面元素设计","children":[]},{"level":2,"title":"01. 登录表单","slug":"_01-登录表单","link":"#_01-登录表单","children":[]},{"level":2,"title":"02. 查询表单","slug":"_02-查询表单","link":"#_02-查询表单","children":[]},{"level":2,"title":"03. 表格","slug":"_03-表格","link":"#_03-表格","children":[]}],"relativePath":"documentcatalog/f_tools/c_other/10.拿到需求文档后复杂业务的解决流程.md"}'),t={name:"documentcatalog/f_tools/c_other/10.拿到需求文档后复杂业务的解决流程.md"},_=a('<h2 id="模块化开发" tabindex="-1">模块化开发 <a class="header-anchor" href="#模块化开发" aria-hidden="true">#</a></h2><p>模块设计，指定style，文件夹分类，路由跳转模式。 单文件组件最好不要超过1000行代码，最多包含一个表单和表格，否则方法和变量过多会导致混乱，其他元素使用组件引入依然可以调用方法和修改数据。</p><h2 id="页面元素设计" tabindex="-1">页面元素设计 <a class="header-anchor" href="#页面元素设计" aria-hidden="true">#</a></h2><p>一个页面中哪个div使用组件，怎样使用组件/路由跳转是最方便的（组件方法的调用，组件参数的获取，组件是否影响父级元素）。</p><h2 id="_01-登录表单" tabindex="-1">01. 登录表单 <a class="header-anchor" href="#_01-登录表单" aria-hidden="true">#</a></h2><ul><li>用户名</li><li>密码</li><li>注册</li></ul><h2 id="_02-查询表单" tabindex="-1">02. 查询表单 <a class="header-anchor" href="#_02-查询表单" aria-hidden="true">#</a></h2><p>功能：</p><ul><li>时间起止先后校验</li><li>查询按钮通过ref触发表单校验</li><li>loading Button防止重复提交</li></ul><h2 id="_03-表格" tabindex="-1">03. 表格 <a class="header-anchor" href="#_03-表格" aria-hidden="true">#</a></h2><p>表格元素：</p><ul><li>基础表格</li><li>新增</li><li>删除</li><li>复选框</li><li>loading</li><li>分页</li></ul>',12),r=[_];function n(d,h,c,o,s,u){return l(),i("div",null,r)}const g=e(t,[["render",n]]);export{f as __pageData,g as default};
