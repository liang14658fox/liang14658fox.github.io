import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.681fc4ae.js";const h=JSON.parse('{"title":"Vue异步API","description":"","frontmatter":{"title":"Vue异步API"},"headers":[],"relativePath":"4_frame_Vue.js/快速开发/034.Vue常用API.md","filePath":"4_frame_Vue.js/快速开发/034.Vue常用API.md"}'),p={name:"4_frame_Vue.js/快速开发/034.Vue常用API.md"},e=l(`<div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>本页面文档暂未更新</p></div><ol><li><code>$nextTick()</code><code>nextTick</code> 是 Vue.js 的一个异步API，用于在 DOM 更新之后执行一段延迟的操作。在 Vue.js 中，当修改数据后触发数据更新，但是 DOM 并不会立即更新，而是加入到异步队列中，在下一个时间片去更新 DOM。</li></ol><p><code>nextTick</code> 用于在 DOM 更新后执行一些操作，避免出现数据更新后立即去访问 DOM 却得不到最新的值的问题。例如，在使用 <code>$refs</code> 访问父子组件中的 DOM 元素时，常常需要在 DOM 完全更新后才能正确访问。</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">default</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">created</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">$nextTick</span><span style="color:#E1E4E8;">(() </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">      console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;渲染完毕之后执行：&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    })</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">script</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">default</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">created</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">$nextTick</span><span style="color:#24292E;">(() </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;渲染完毕之后执行：&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    })</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">script</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><p>Vue.js 还提供了类似的异步API，例如 <code>$nextTick</code> 和 <code>$forceUpdate</code> 等。 <code>$forceUpdate</code> 则是用于强制更新组件的，它会触发组件的重新渲染。</p><ol start="2"><li>element刷新表单校验和值</li></ol><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.$refs[</span><span style="color:#9ECBFF;">&quot;formName&quot;</span><span style="color:#E1E4E8;">].</span><span style="color:#B392F0;">resetFields</span><span style="color:#E1E4E8;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">this</span><span style="color:#24292E;">.$refs[</span><span style="color:#032F62;">&quot;formName&quot;</span><span style="color:#24292E;">].</span><span style="color:#6F42C1;">resetFields</span><span style="color:#24292E;">();</span></span></code></pre></div><ol start="3"><li>Vue强制刷新页面内容</li></ol><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">$forceUpdate</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">$forceUpdate</span><span style="color:#24292E;">()</span></span></code></pre></div><ol start="4"><li>Element表格部分数据变化，重新渲染tableData</li></ol><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"></span></code></pre></div>`,11),o=[e];function t(c,r,i,E,d,y){return a(),n("div",null,o)}const g=s(p,[["render",t]]);export{h as __pageData,g as default};
