import{_ as s,o as a,c as n,a as l}from"./app.f0522242.js";const C=JSON.parse('{"title":"类型转换","description":"","frontmatter":{"title":"类型转换"},"headers":[{"level":2,"title":"1. 字符串 => 数字","slug":"_1-字符串-数字","link":"#_1-字符串-数字","children":[]},{"level":2,"title":"2. 数字 => 字符串","slug":"_2-数字-字符串","link":"#_2-数字-字符串","children":[]},{"level":2,"title":"3. => 布尔型","slug":"_3-布尔型","link":"#_3-布尔型","children":[]},{"level":2,"title":"4. 对象 => JSON","slug":"_4-对象-json","link":"#_4-对象-json","children":[]},{"level":2,"title":"5. JSON => 对象","slug":"_5-json-对象","link":"#_5-json-对象","children":[]},{"level":2,"title":"6. 截取String前x位字符","slug":"_6-截取string前x位字符","link":"#_6-截取string前x位字符","children":[]}],"relativePath":"documentcatalog/d_native/b_javascript/06.类型互相转换.md"}'),e={name:"documentcatalog/d_native/b_javascript/06.类型互相转换.md"},o=l(`<h2 id="_1-字符串-数字" tabindex="-1">1. <code>字符串</code> =&gt; <code>数字</code> <a class="header-anchor" href="#_1-字符串-数字" aria-hidden="true">#</a></h2><ol><li><p>使用 <code>parseInt(&#39;12&#39;)</code> 方法转换整型</p></li><li><p>使用 <code>parseFloat(&#39;3.12&#39;)</code> 转换浮点类型</p></li><li><p>使用 <code>Number()</code> 强制转换</p></li></ol><p>JS隐式转换</p><h2 id="_2-数字-字符串" tabindex="-1">2. <code>数字</code> =&gt; <code>字符串</code> <a class="header-anchor" href="#_2-数字-字符串" aria-hidden="true">#</a></h2><ol><li><p>使用 <code>num.toString()</code> 方法</p></li><li><p>使用 <code>String(num)</code> 方法</p></li><li><p>利用 <code>num + &#39;&#39;</code> 的技巧</p></li></ol><h2 id="_3-布尔型" tabindex="-1">3. =&gt; <code>布尔型</code> <a class="header-anchor" href="#_3-布尔型" aria-hidden="true">#</a></h2><p><code>false</code> 、 <code>&#39;&#39;</code> 、 <code>0</code> 、 <code>NaN</code> 、 <code>null</code> 、 <code>undefined</code> 以及其他转换为布尔型</p><ol><li>使用Boolean()方法</li></ol><h2 id="_4-对象-json" tabindex="-1">4. <code>对象</code> =&gt; <code>JSON</code> <a class="header-anchor" href="#_4-对象-json" aria-hidden="true">#</a></h2><ol><li><code>JSON.stringify()</code></li></ol><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> json </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">iphone</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">price</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">666</span><span style="color:#89DDFF;">};</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//创建对象；</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> jsonStr </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> JSON</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">stringify</span><span style="color:#A6ACCD;">(json)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">       </span><span style="color:#676E95;font-style:italic;">//转为JSON字符串</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(jsonStr)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="_5-json-对象" tabindex="-1">5. <code>JSON</code> =&gt; <code>对象</code> <a class="header-anchor" href="#_5-json-对象" aria-hidden="true">#</a></h2><ol><li><code>JSON.parse()</code></li></ol><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> jsonObj1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> JSON</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">parse</span><span style="color:#A6ACCD;">(data)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">//使用JSON.parse() 将JSON字符串转为JS对象;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(jsonObj1)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ol start="2"><li><code>eval()</code></li></ol><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> jsonObj2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">eval</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> data </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">)</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//使用eval() 将JSON字符串转为JS对象；</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(jsonObj2)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="_6-截取string前x位字符" tabindex="-1">6. 截取String前x位字符 <a class="header-anchor" href="#_6-截取string前x位字符" aria-hidden="true">#</a></h2><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> str </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">123456789</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(str</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">slice</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">4</span><span style="color:#A6ACCD;">)) </span><span style="color:#676E95;font-style:italic;">//1234</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(str</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">slice</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">6</span><span style="color:#A6ACCD;">)) </span><span style="color:#676E95;font-style:italic;">//56</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>`,18),p=[o];function c(t,r,i,d,y,D){return a(),n("div",null,p)}const A=s(e,[["render",c]]);export{C as __pageData,A as default};
