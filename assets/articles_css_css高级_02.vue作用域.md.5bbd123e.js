import{_ as e,o as d,c,a as o}from"./app.4462bc18.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"1.","slug":"_1","link":"#_1","children":[]},{"level":2,"title":"2.","slug":"_2","link":"#_2","children":[]},{"level":2,"title":"3.","slug":"_3","link":"#_3","children":[]}],"relativePath":"articles/css/css高级/02.vue作用域.md"}'),t={name:"articles/css/css高级/02.vue作用域.md"},a=o('<h2 id="_1" tabindex="-1">1. <a class="header-anchor" href="#_1" aria-hidden="true">#</a></h2><p><code>::v-deep</code> 和 <code>/deep/</code> 是出现在 Vue.js 技术栈中的。</p><p>学习 Vue.js 的时候，你会碰到这些选择器。在使用 Vue.js 编写组件时，组件的样式可能会嵌套在父级组件中，此时使用 <code>/deep/</code> 或 <code>::v-deep</code> 可以穿透到子组件内部的 DOM 元素，实现样式的继承和覆盖。</p><p>在 Vue.js 2.6 中，<code>/deep/</code> 被标记为过时，可以用 <code>::v-deep</code> 来代替。同时也可以使用 <code>&gt;&gt;&gt;</code> 选择器来实现相同的选择器效果。</p><h2 id="_2" tabindex="-1">2. <a class="header-anchor" href="#_2" aria-hidden="true">#</a></h2><p>在 CSS 中，<code>!important</code> 可以用于覆盖样式优先级和继承规则，以确保特定规则的优先级最高。</p><h2 id="_3" tabindex="-1">3. <a class="header-anchor" href="#_3" aria-hidden="true">#</a></h2><p>而 SCSS 则是一种 CSS 预处理器，它允许你使用变量、嵌套、混合、继承等高级功能来编写样式表，简化了 CSS 的书写。SCSS 文件可以使用 <code>.scss</code> 后缀名，也可以使用 <code>.sass</code> 后缀名。</p><p>总之，学习 Vue.js 和 CSS 的时候，你都会碰到 <code>::v-deep</code> 和 <code>!important</code>，在学习 SCSS 时会接触到后者的简写语法 <code>!</code>。而 <code>/deep/</code> 在 Vue.js 中已被标记为过时，大多数情况下可以用 <code>::v-deep</code> 或 <code>&gt;&gt;&gt;</code> 来代替。</p>',9),s=[a];function _(r,i,n,p,l,h){return d(),c("div",null,s)}const v=e(t,[["render",_]]);export{u as __pageData,v as default};
