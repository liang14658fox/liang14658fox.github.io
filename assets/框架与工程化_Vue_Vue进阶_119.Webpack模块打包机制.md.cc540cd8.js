import{_ as s,o as n,c as a,Q as p}from"./chunks/framework.681fc4ae.js";const B=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"框架与工程化/Vue/Vue进阶/119.Webpack模块打包机制.md","filePath":"框架与工程化/Vue/Vue进阶/119.Webpack模块打包机制.md","lastUpdated":1719474694000}'),l={name:"框架与工程化/Vue/Vue进阶/119.Webpack模块打包机制.md"},o=p(`<p>在官方定义中，Webpack 是一个现代 JavaScript 应用静态模块打包器。它统一了 JavaScript 在发展过程中出现的各种模块化方案，我们可以认为 Webpack 是 JavaScript 模块化的统一解决方案。</p><p>如果有对 JavaScript 各种模块化方案还不是很了解的小伙伴，建议阅读《JavaScript 模块的发展史》。</p><p>在 Webpack 对源代码的编译过程中，包含了一个模块打包的工作，其实就是 Webpack 从入口文件开始，逐级地将源代码中各个模块的依赖关系分析出来，输入最终的打包文件。</p><p>接下来让我们以 CommonJS 和 ES6 的模块机制为例，来更深入地理解 Webpack 的模块打包机制。</p><p>如下 webpack.config.js 的简单配置，在下述例子中，都是以该配置为准的。</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#758575DD;">// webpack.config.js</span></span>
<span class="line"><span style="color:#CB7676;">const</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">path</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">require</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">path</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B8A965;">module</span><span style="color:#666666;">.</span><span style="color:#B8A965;">exports</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#B8A965;">entry</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">./src/index.js</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#B8A965;">output</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#B8A965;">path</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">path</span><span style="color:#666666;">.</span><span style="color:#80A665;">resolve</span><span style="color:#666666;">(</span><span style="color:#BD976A;">__dirname</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">dist</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">),</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#B8A965;">filename</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">bundle.js</span><span style="color:#C98A7D99;">&#39;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">},</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#B8A965;">mode</span><span style="color:#666666;">:</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">development</span><span style="color:#C98A7D99;">&#39;</span></span>
<span class="line"><span style="color:#666666;">};</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#A0ADA0;">// webpack.config.js</span></span>
<span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">path</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#59873A;">require</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">path</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#998418;">module</span><span style="color:#999999;">.</span><span style="color:#998418;">exports</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#998418;">entry</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">./src/index.js</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#998418;">output</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#998418;">path</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">path</span><span style="color:#999999;">.</span><span style="color:#59873A;">resolve</span><span style="color:#999999;">(</span><span style="color:#B07D48;">__dirname</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">dist</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">),</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#998418;">filename</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">bundle.js</span><span style="color:#B5695999;">&#39;</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">},</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#998418;">mode</span><span style="color:#999999;">:</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">development</span><span style="color:#B5695999;">&#39;</span></span>
<span class="line"><span style="color:#999999;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>CommonJS</p><p>在 CommonJS 的模块机制中，使用 require 引入模块，module.exports/exports 输出模块。 模块文件 bar.js 和入口文件 index.js 分别如下：</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#758575DD;">// src/bar.js</span></span>
<span class="line"><span style="color:#CB7676;">var</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">num</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">1</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#CB7676;">function</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">addNum</span><span style="color:#666666;">(){</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">num</span><span style="color:#CB7676;">++</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B8A965;">module</span><span style="color:#666666;">.</span><span style="color:#B8A965;">exports</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#B8A965;">num</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">num</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#B8A965;">addNum</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">addNum</span></span>
<span class="line"><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#758575DD;">// src/index.js</span></span>
<span class="line"><span style="color:#CB7676;">var</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">bar</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">require</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">./bar.js</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BD976A;">console</span><span style="color:#666666;">.</span><span style="color:#80A665;">log</span><span style="color:#666666;">(</span><span style="color:#BD976A;">bar</span><span style="color:#666666;">.</span><span style="color:#BD976A;">num</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;">  </span><span style="color:#758575DD;">// 1</span></span>
<span class="line"><span style="color:#BD976A;">bar</span><span style="color:#666666;">.</span><span style="color:#80A665;">addNum</span><span style="color:#666666;">();</span></span>
<span class="line"><span style="color:#BD976A;">console</span><span style="color:#666666;">.</span><span style="color:#80A665;">log</span><span style="color:#666666;">(</span><span style="color:#BD976A;">bar</span><span style="color:#666666;">.</span><span style="color:#BD976A;">num</span><span style="color:#666666;">);</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// 1</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#A0ADA0;">// src/bar.js</span></span>
<span class="line"><span style="color:#AB5959;">var</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">num</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">1</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#AB5959;">function</span><span style="color:#393A34;"> </span><span style="color:#59873A;">addNum</span><span style="color:#999999;">(){</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">num</span><span style="color:#AB5959;">++</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#999999;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#998418;">module</span><span style="color:#999999;">.</span><span style="color:#998418;">exports</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#998418;">num</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">num</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#998418;">addNum</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">addNum</span></span>
<span class="line"><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#A0ADA0;">// src/index.js</span></span>
<span class="line"><span style="color:#AB5959;">var</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">bar</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#59873A;">require</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">./bar.js</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B07D48;">console</span><span style="color:#999999;">.</span><span style="color:#59873A;">log</span><span style="color:#999999;">(</span><span style="color:#B07D48;">bar</span><span style="color:#999999;">.</span><span style="color:#B07D48;">num</span><span style="color:#999999;">)</span><span style="color:#393A34;">  </span><span style="color:#A0ADA0;">// 1</span></span>
<span class="line"><span style="color:#B07D48;">bar</span><span style="color:#999999;">.</span><span style="color:#59873A;">addNum</span><span style="color:#999999;">();</span></span>
<span class="line"><span style="color:#B07D48;">console</span><span style="color:#999999;">.</span><span style="color:#59873A;">log</span><span style="color:#999999;">(</span><span style="color:#B07D48;">bar</span><span style="color:#999999;">.</span><span style="color:#B07D48;">num</span><span style="color:#999999;">);</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// 1</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>运行 webpack 命令后，我们可得到最终的输出文件 bundle.js，最终生成的 bundle.js 文件中的内容实际上是一个自执行函数，其传入的参数 modules 对象包含了入口文件以及各个依赖模块，形式如下：</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">./src/bar.js</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#DBD7CAEE;">:</span><span style="color:#666666;">(</span><span style="color:#CB7676;">function</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span><span style="color:#BD976A;">module</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">exports</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{}),</span></span>
<span class="line"><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">./src/index.js</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#DBD7CAEE;">:</span><span style="color:#666666;">(</span><span style="color:#CB7676;">function</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span><span style="color:#BD976A;">module</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">exports</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">__webpack_require__</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{})</span></span>
<span class="line"><span style="color:#666666;">}</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">./src/bar.js</span><span style="color:#B5695999;">&quot;</span><span style="color:#393A34;">:</span><span style="color:#999999;">(</span><span style="color:#AB5959;">function</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#B07D48;">module</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">exports</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{}),</span></span>
<span class="line"><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">./src/index.js</span><span style="color:#B5695999;">&quot;</span><span style="color:#393A34;">:</span><span style="color:#999999;">(</span><span style="color:#AB5959;">function</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#B07D48;">module</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">exports</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">__webpack_require__</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{})</span></span>
<span class="line"><span style="color:#999999;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>在 modules 对象中，各个属性名为文件路径字符串，属性值为一个函数，其中包含了文件源代码中的内容，而源代码中的引入输出功能则是通过自定义的方式来实现的。</p><p>其中的关键便是 <strong>webpack_require</strong> 方法：</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#CB7676;">var</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">installedModules</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{};</span></span>
<span class="line"><span style="color:#758575DD;">// The require function</span></span>
<span class="line"><span style="color:#CB7676;">function</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">__webpack_require__</span><span style="color:#666666;">(</span><span style="color:#BD976A;">moduleId</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#666666;">  </span><span style="color:#758575DD;">// Check if module is in cache</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#4D9375;">if</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span><span style="color:#BD976A;">installedModules</span><span style="color:#666666;">[</span><span style="color:#BD976A;">moduleId</span><span style="color:#666666;">])</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">installedModules</span><span style="color:#666666;">[</span><span style="color:#BD976A;">moduleId</span><span style="color:#666666;">].</span><span style="color:#BD976A;">exports</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#666666;">  </span><span style="color:#758575DD;">// Create a new module (and put it into the cache)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">var</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">module</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">installedModules</span><span style="color:#666666;">[</span><span style="color:#BD976A;">moduleId</span><span style="color:#666666;">]</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#B8A965;">i</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">moduleId</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#B8A965;">l</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">false</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#B8A965;">exports</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{}</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">};</span></span>
<span class="line"><span style="color:#666666;">  </span><span style="color:#758575DD;">// Execute the module function</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">modules</span><span style="color:#666666;">[</span><span style="color:#BD976A;">moduleId</span><span style="color:#666666;">].</span><span style="color:#80A665;">call</span><span style="color:#666666;">(</span><span style="color:#B8A965;">module</span><span style="color:#666666;">.</span><span style="color:#B8A965;">exports</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">module</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">module</span><span style="color:#666666;">.</span><span style="color:#B8A965;">exports</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">__webpack_require__</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#666666;">  </span><span style="color:#758575DD;">// Flag the module as loaded</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#B8A965;">module</span><span style="color:#666666;">.</span><span style="color:#BD976A;">l</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">true</span><span style="color:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#666666;">  </span><span style="color:#758575DD;">// Return the exports of the module</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">module</span><span style="color:#666666;">.</span><span style="color:#B8A965;">exports</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#666666;">}</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#AB5959;">var</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">installedModules</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#999999;">{};</span></span>
<span class="line"><span style="color:#A0ADA0;">// The require function</span></span>
<span class="line"><span style="color:#AB5959;">function</span><span style="color:#393A34;"> </span><span style="color:#59873A;">__webpack_require__</span><span style="color:#999999;">(</span><span style="color:#B07D48;">moduleId</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">// Check if module is in cache</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">if</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#B07D48;">installedModules</span><span style="color:#999999;">[</span><span style="color:#B07D48;">moduleId</span><span style="color:#999999;">])</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">installedModules</span><span style="color:#999999;">[</span><span style="color:#B07D48;">moduleId</span><span style="color:#999999;">].</span><span style="color:#B07D48;">exports</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">// Create a new module (and put it into the cache)</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">var</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">module</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">installedModules</span><span style="color:#999999;">[</span><span style="color:#B07D48;">moduleId</span><span style="color:#999999;">]</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#998418;">i</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">moduleId</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#998418;">l</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">false</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#998418;">exports</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#999999;">{}</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">};</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">// Execute the module function</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">modules</span><span style="color:#999999;">[</span><span style="color:#B07D48;">moduleId</span><span style="color:#999999;">].</span><span style="color:#59873A;">call</span><span style="color:#999999;">(</span><span style="color:#998418;">module</span><span style="color:#999999;">.</span><span style="color:#998418;">exports</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#998418;">module</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#998418;">module</span><span style="color:#999999;">.</span><span style="color:#998418;">exports</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">__webpack_require__</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">// Flag the module as loaded</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#998418;">module</span><span style="color:#999999;">.</span><span style="color:#B07D48;">l</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">true</span><span style="color:#999999;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">// Return the exports of the module</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#998418;">module</span><span style="color:#999999;">.</span><span style="color:#998418;">exports</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#999999;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p><strong>webpack_require</strong> 方法接收模块唯一的 moduleId 作为参数，其主要做了以下几件事：</p><p>判断该模块是否存在缓存对象中，若是则返回缓存对象中对应模块，若否则定义模块对象并存储进缓存对象中；</p><p>执行 modules 对象中对应模块的函数（在函数中会将该模块输出的内容存储进 module.exports 中）；</p><p>返回该模块 module.exports；</p><p>所以，在最终生成的自执行函数中，除了对一些变量、方法的定义外，其最终返回了对入口文件的引用：</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">__webpack_require__</span><span style="color:#666666;">(</span><span style="color:#BD976A;">__webpack_require__</span><span style="color:#666666;">.</span><span style="color:#BD976A;">s</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">./src/index.js</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">);</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#59873A;">__webpack_require__</span><span style="color:#999999;">(</span><span style="color:#B07D48;">__webpack_require__</span><span style="color:#999999;">.</span><span style="color:#B07D48;">s</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">./src/index.js</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>接下来便会按我们的预期去执行 <strong>webpack_require</strong> 函数，传入的 moduleId 为 ./src/index.js，所以会执行 modules 对象中相应的属性值函数：</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#758575DD;">// modules 对象中 ./src/index.js 对应函数</span></span>
<span class="line"><span style="color:#666666;">(</span><span style="color:#CB7676;">function</span><span style="color:#666666;">(</span><span style="color:#BD976A;">module</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">exports</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">__webpack_require__</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#80A665;">eval</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">// src/index.js</span><span style="color:#C99076;">\\n</span><span style="color:#C98A7D;">var bar = __webpack_require__(/*! ./bar.js */ </span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">./src/bar.js</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">);</span><span style="color:#C99076;">\\n\\n</span><span style="color:#C98A7D;">console.log(bar.num)  // 1</span><span style="color:#C99076;">\\n</span><span style="color:#C98A7D;">bar.addNum();</span><span style="color:#C99076;">\\n</span><span style="color:#C98A7D;">console.log(bar.num); // 1</span><span style="color:#C99076;">\\n\\n</span><span style="color:#C98A7D;">//# sourceURL=webpack:///./src/index.js?</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#666666;">})</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#A0ADA0;">// modules 对象中 ./src/index.js 对应函数</span></span>
<span class="line"><span style="color:#999999;">(</span><span style="color:#AB5959;">function</span><span style="color:#999999;">(</span><span style="color:#B07D48;">module</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">exports</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">__webpack_require__</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">eval</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">// src/index.js</span><span style="color:#A65E2B;">\\n</span><span style="color:#B56959;">var bar = __webpack_require__(/*! ./bar.js */ </span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">./src/bar.js</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">);</span><span style="color:#A65E2B;">\\n\\n</span><span style="color:#B56959;">console.log(bar.num)  // 1</span><span style="color:#A65E2B;">\\n</span><span style="color:#B56959;">bar.addNum();</span><span style="color:#A65E2B;">\\n</span><span style="color:#B56959;">console.log(bar.num); // 1</span><span style="color:#A65E2B;">\\n\\n</span><span style="color:#B56959;">//# sourceURL=webpack:///./src/index.js?</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#999999;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>可以看到，在该函数中使用自定义的 <strong>webpack_require</strong> 方法去替代了 CommonJS 中的 require 方法引入 bar.js 模块，并执行相应代码。</p><p>而在引入 ./src/bar.js 所对应的属性值函数时，也会执行函数内的代码：</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#758575DD;">// modules 对象中 ./src/bar.js 对应函数</span></span>
<span class="line"><span style="color:#666666;">(</span><span style="color:#CB7676;">function</span><span style="color:#666666;">(</span><span style="color:#BD976A;">module</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">exports</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#80A665;">eval</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">var num = 1;</span><span style="color:#C99076;">\\n</span><span style="color:#C98A7D;">function addNum() {</span><span style="color:#C99076;">\\n</span><span style="color:#C98A7D;">  num++;</span><span style="color:#C99076;">\\n</span><span style="color:#C98A7D;">}</span><span style="color:#C99076;">\\n\\n</span><span style="color:#C98A7D;">module.exports = {</span><span style="color:#C99076;">\\n</span><span style="color:#C98A7D;">  num: num,</span><span style="color:#C99076;">\\n</span><span style="color:#C98A7D;">  addNum: addNum</span><span style="color:#C99076;">\\n</span><span style="color:#C98A7D;">}</span><span style="color:#C99076;">\\n\\n</span><span style="color:#C98A7D;">//# sourceURL=webpack:///./src/bar.js?</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#666666;">})</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#A0ADA0;">// modules 对象中 ./src/bar.js 对应函数</span></span>
<span class="line"><span style="color:#999999;">(</span><span style="color:#AB5959;">function</span><span style="color:#999999;">(</span><span style="color:#B07D48;">module</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">exports</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">eval</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">var num = 1;</span><span style="color:#A65E2B;">\\n</span><span style="color:#B56959;">function addNum() {</span><span style="color:#A65E2B;">\\n</span><span style="color:#B56959;">  num++;</span><span style="color:#A65E2B;">\\n</span><span style="color:#B56959;">}</span><span style="color:#A65E2B;">\\n\\n</span><span style="color:#B56959;">module.exports = {</span><span style="color:#A65E2B;">\\n</span><span style="color:#B56959;">  num: num,</span><span style="color:#A65E2B;">\\n</span><span style="color:#B56959;">  addNum: addNum</span><span style="color:#A65E2B;">\\n</span><span style="color:#B56959;">}</span><span style="color:#A65E2B;">\\n\\n</span><span style="color:#B56959;">//# sourceURL=webpack:///./src/bar.js?</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#999999;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>我们会发现该函数的实际内容与 bar.js 模块的内容是一模一样的，但实际上不同的是函数中 module.exports 并不是属于 CommonJS 模块的语法，而是函数中传进来的 module 对象的属性，这个 module 是 Webpack 中自定义的模块对象，形式如下：</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#CB7676;">var</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">module</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">installedModules</span><span style="color:#666666;">[</span><span style="color:#BD976A;">moduleId</span><span style="color:#666666;">]</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#B8A965;">i</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">moduleId</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#B8A965;">l</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">false</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#B8A965;">exports</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{}</span></span>
<span class="line"><span style="color:#666666;">};</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#AB5959;">var</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">module</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">installedModules</span><span style="color:#999999;">[</span><span style="color:#B07D48;">moduleId</span><span style="color:#999999;">]</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#998418;">i</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">moduleId</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#998418;">l</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">false</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#998418;">exports</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#999999;">{}</span></span>
<span class="line"><span style="color:#999999;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>在 Webpack 中正是通过这种方式实现模块内容的输出。</p><p>至此，Webpack 已经实现了 CommonJS 模块的引入输出功能，接下来我们再来深究 CommonJS 模块输出的一个特性：CommonJS 模块输出的是值的缓存，不存在动态更新。</p><p>上述的例子，在 index.js 文件中先输出 num 的值，然后再调用 addNum 方法，最后再输出 num 的值，会发现 num 的值没有改变。因为 addNum 方法改变的是 bar.js 中 num 的值，而在 bar.js 中的输出是以浅拷贝的方式。</p><p>所以，在执行 ./src/bar.js 对应属性值函数时，可以发现如下代码：</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#B8A965;">module</span><span style="color:#666666;">.</span><span style="color:#B8A965;">exports</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;">\\n  </span><span style="color:#B8A965;">num</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">num</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;">\\n  </span><span style="color:#B8A965;">addNum</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">addNum</span><span style="color:#DBD7CAEE;">\\</span><span style="color:#BD976A;">n</span><span style="color:#666666;">}</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#998418;">module</span><span style="color:#999999;">.</span><span style="color:#998418;">exports</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;">\\n  </span><span style="color:#998418;">num</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">num</span><span style="color:#999999;">,</span><span style="color:#393A34;">\\n  </span><span style="color:#998418;">addNum</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">addNum</span><span style="color:#393A34;">\\</span><span style="color:#B07D48;">n</span><span style="color:#999999;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>这也表明了在 Webpack 中模块的输出实现方式依旧遵循 CommonJS 模块输出的特性，输出其实是以浅拷贝的方式来实现的（注意这点，会与下述 ES6 中的 export 输出的特性做比较）。</p><p>ES6</p><p>在 ES6 模块化方案中，使用 import 引入模块，export 或 export default 输出模块。</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#CB7676;">export</span></span>
<span class="line"><span style="color:#758575DD;">// src/bar.js</span></span>
<span class="line"><span style="color:#CB7676;">var</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">num</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">1</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#CB7676;">function</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">addNum</span><span style="color:#666666;">(){</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">num</span><span style="color:#CB7676;">++</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#4D9375;">export</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">num</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">addNum</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#758575DD;">// src/index.js</span></span>
<span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">num</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">addNum</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">./bar.js</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BD976A;">console</span><span style="color:#666666;">.</span><span style="color:#80A665;">log</span><span style="color:#666666;">(</span><span style="color:#BD976A;">num</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;">  </span><span style="color:#758575DD;">// 1</span></span>
<span class="line"><span style="color:#80A665;">addNum</span><span style="color:#666666;">();</span></span>
<span class="line"><span style="color:#BD976A;">console</span><span style="color:#666666;">.</span><span style="color:#80A665;">log</span><span style="color:#666666;">(</span><span style="color:#BD976A;">num</span><span style="color:#666666;">);</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// 2</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#AB5959;">export</span></span>
<span class="line"><span style="color:#A0ADA0;">// src/bar.js</span></span>
<span class="line"><span style="color:#AB5959;">var</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">num</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">1</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#AB5959;">function</span><span style="color:#393A34;"> </span><span style="color:#59873A;">addNum</span><span style="color:#999999;">(){</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">num</span><span style="color:#AB5959;">++</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#999999;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">num</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">addNum</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#A0ADA0;">// src/index.js</span></span>
<span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">num</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">addNum</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">./bar.js</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B07D48;">console</span><span style="color:#999999;">.</span><span style="color:#59873A;">log</span><span style="color:#999999;">(</span><span style="color:#B07D48;">num</span><span style="color:#999999;">)</span><span style="color:#393A34;">  </span><span style="color:#A0ADA0;">// 1</span></span>
<span class="line"><span style="color:#59873A;">addNum</span><span style="color:#999999;">();</span></span>
<span class="line"><span style="color:#B07D48;">console</span><span style="color:#999999;">.</span><span style="color:#59873A;">log</span><span style="color:#999999;">(</span><span style="color:#B07D48;">num</span><span style="color:#999999;">);</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// 2</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>运行 webpack 命令后，同样地输出一个 bundle.js 文件，在 bundle.js 文件中同样是一个自执行函数，与 CommonJS 模块打包出来的文件基本上是一致的，不同的是在 modules 对象中对应的属性值函数不同。</p><p>ES6 模块机制中输出的特性是：export 语句输出的接口，与其对应的值是动态绑定关系。</p><p>在 modules 对象 中 ./src/index.js 对应的属性值函数为：</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#758575DD;">// modules 对象中 ./src/index.js 对应函数</span></span>
<span class="line"><span style="color:#666666;">(</span><span style="color:#CB7676;">function</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span><span style="color:#BD976A;">module</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">__webpack_exports__</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">__webpack_require__</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">use strict</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#80A665;">eval</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">__webpack_require__.r(__webpack_exports__);</span><span style="color:#C99076;">\\n</span><span style="color:#C98A7D;">/* harmony import */ var _bar_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bar.js */ </span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">./src/bar.js</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">);</span><span style="color:#C99076;">\\n\\n\\n</span><span style="color:#C98A7D;">console.log(_bar_js__WEBPACK_IMPORTED_MODULE_0__[</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">num</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">])  // 1</span><span style="color:#C99076;">\\n</span><span style="color:#C98A7D;">Object(_bar_js__WEBPACK_IMPORTED_MODULE_0__[</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">addNum</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">])();</span><span style="color:#C99076;">\\n</span><span style="color:#C98A7D;">console.log(_bar_js__WEBPACK_IMPORTED_MODULE_0__[</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">num</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">]); // 2</span><span style="color:#C99076;">\\n\\n</span><span style="color:#C98A7D;">//# sourceURL=webpack:///./src/index.js?</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#666666;">})</span></span>
<span class="line"><span style="color:#666666;">.</span><span style="color:#CB7676;">/</span><span style="color:#BD976A;">src</span><span style="color:#CB7676;">/</span><span style="color:#BD976A;">bar</span><span style="color:#666666;">.</span><span style="color:#BD976A;">js</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">对应的属性值函数为</span><span style="color:#DBD7CAEE;">：</span></span>
<span class="line"><span style="color:#758575DD;">// modules 对象中 ./src/bar.js 对应函数</span></span>
<span class="line"><span style="color:#666666;">(</span><span style="color:#CB7676;">function</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span><span style="color:#BD976A;">module</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">__webpack_exports__</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">__webpack_require__</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">use strict</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#80A665;">eval</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">__webpack_require__.r(__webpack_exports__);</span><span style="color:#C99076;">\\n</span><span style="color:#C98A7D;">/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, </span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">num</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">, function() { return num; });</span><span style="color:#C99076;">\\n</span><span style="color:#C98A7D;">/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, </span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">addNum</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">, function() { return addNum; });</span><span style="color:#C99076;">\\n</span><span style="color:#C98A7D;">var num = 1;</span><span style="color:#C99076;">\\n</span><span style="color:#C98A7D;">function addNum() {</span><span style="color:#C99076;">\\n</span><span style="color:#C98A7D;">  num++;</span><span style="color:#C99076;">\\n</span><span style="color:#C98A7D;">}</span><span style="color:#C99076;">\\n\\n\\n\\n</span><span style="color:#C98A7D;">//# sourceURL=webpack:///./src/bar.js?</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#666666;">})</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#A0ADA0;">// modules 对象中 ./src/index.js 对应函数</span></span>
<span class="line"><span style="color:#999999;">(</span><span style="color:#AB5959;">function</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#B07D48;">module</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">__webpack_exports__</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">__webpack_require__</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">use strict</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">eval</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">__webpack_require__.r(__webpack_exports__);</span><span style="color:#A65E2B;">\\n</span><span style="color:#B56959;">/* harmony import */ var _bar_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bar.js */ </span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">./src/bar.js</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">);</span><span style="color:#A65E2B;">\\n\\n\\n</span><span style="color:#B56959;">console.log(_bar_js__WEBPACK_IMPORTED_MODULE_0__[</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">num</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">])  // 1</span><span style="color:#A65E2B;">\\n</span><span style="color:#B56959;">Object(_bar_js__WEBPACK_IMPORTED_MODULE_0__[</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">addNum</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">])();</span><span style="color:#A65E2B;">\\n</span><span style="color:#B56959;">console.log(_bar_js__WEBPACK_IMPORTED_MODULE_0__[</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">num</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">]); // 2</span><span style="color:#A65E2B;">\\n\\n</span><span style="color:#B56959;">//# sourceURL=webpack:///./src/index.js?</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#999999;">})</span></span>
<span class="line"><span style="color:#999999;">.</span><span style="color:#AB5959;">/</span><span style="color:#B07D48;">src</span><span style="color:#AB5959;">/</span><span style="color:#B07D48;">bar</span><span style="color:#999999;">.</span><span style="color:#B07D48;">js</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">对应的属性值函数为</span><span style="color:#393A34;">：</span></span>
<span class="line"><span style="color:#A0ADA0;">// modules 对象中 ./src/bar.js 对应函数</span></span>
<span class="line"><span style="color:#999999;">(</span><span style="color:#AB5959;">function</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#B07D48;">module</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">__webpack_exports__</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">__webpack_require__</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">use strict</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">eval</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">__webpack_require__.r(__webpack_exports__);</span><span style="color:#A65E2B;">\\n</span><span style="color:#B56959;">/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, </span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">num</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">, function() { return num; });</span><span style="color:#A65E2B;">\\n</span><span style="color:#B56959;">/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, </span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">addNum</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">, function() { return addNum; });</span><span style="color:#A65E2B;">\\n</span><span style="color:#B56959;">var num = 1;</span><span style="color:#A65E2B;">\\n</span><span style="color:#B56959;">function addNum() {</span><span style="color:#A65E2B;">\\n</span><span style="color:#B56959;">  num++;</span><span style="color:#A65E2B;">\\n</span><span style="color:#B56959;">}</span><span style="color:#A65E2B;">\\n\\n\\n\\n</span><span style="color:#B56959;">//# sourceURL=webpack:///./src/bar.js?</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#999999;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>可以看出其不是直接通过 module.exports 浅拷贝的方式来实现的，而是通过一个 <strong>webpack_require</strong>.d 方法来实现：</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#BD976A;">__webpack_require__</span><span style="color:#666666;">.</span><span style="color:#80A665;">d</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">function</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span><span style="color:#BD976A;">exports</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">name</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">getter</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#4D9375;">if</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span><span style="color:#CB7676;">!</span><span style="color:#BD976A;">__webpack_require__</span><span style="color:#666666;">.</span><span style="color:#80A665;">o</span><span style="color:#666666;">(</span><span style="color:#B8A965;">exports</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">name</span><span style="color:#666666;">))</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#BD976A;">Object</span><span style="color:#666666;">.</span><span style="color:#80A665;">defineProperty</span><span style="color:#666666;">(</span><span style="color:#B8A965;">exports</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">name</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">enumerable</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">true</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">get</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">getter</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">});</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#666666;">};</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#B07D48;">__webpack_require__</span><span style="color:#999999;">.</span><span style="color:#59873A;">d</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">function</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#B07D48;">exports</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">name</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">getter</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">if</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#AB5959;">!</span><span style="color:#B07D48;">__webpack_require__</span><span style="color:#999999;">.</span><span style="color:#59873A;">o</span><span style="color:#999999;">(</span><span style="color:#998418;">exports</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">name</span><span style="color:#999999;">))</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B07D48;">Object</span><span style="color:#999999;">.</span><span style="color:#59873A;">defineProperty</span><span style="color:#999999;">(</span><span style="color:#998418;">exports</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">name</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#998418;">enumerable</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">true</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#998418;">get</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">getter</span><span style="color:#393A34;"> </span><span style="color:#999999;">});</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#999999;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>该方法主要是直接通过定义对象属性的 getter，来实现对引入变量的访问仍是原先模块的内部变量。</p><p>而为什么仅仅定义了 getter 而不定义 setter 呢，是因为在 ES6 模块中，import命令输入的变量都是只读的，因为它的本质是输入接口；如果引入对变量是一个对象，改写变量的属性则是允许的。</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">export</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">default</span></span>
<span class="line"><span style="color:#758575DD;">// src/bar.js</span></span>
<span class="line"><span style="color:#CB7676;">var</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">num</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">1</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#CB7676;">function</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">getNum</span><span style="color:#666666;">(){</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">num</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#4D9375;">export</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">default</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">getNum</span></span>
<span class="line"><span style="color:#758575DD;">// src/index.js</span></span>
<span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">getNum</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">./bar.js</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BD976A;">console</span><span style="color:#666666;">.</span><span style="color:#80A665;">log</span><span style="color:#666666;">(</span><span style="color:#80A665;">getNum</span><span style="color:#666666;">())</span><span style="color:#DBD7CAEE;">  </span><span style="color:#758575DD;">// 1</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">default</span></span>
<span class="line"><span style="color:#A0ADA0;">// src/bar.js</span></span>
<span class="line"><span style="color:#AB5959;">var</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">num</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">1</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#AB5959;">function</span><span style="color:#393A34;"> </span><span style="color:#59873A;">getNum</span><span style="color:#999999;">(){</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">num</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#999999;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">default</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">getNum</span></span>
<span class="line"><span style="color:#A0ADA0;">// src/index.js</span></span>
<span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">getNum</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">./bar.js</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B07D48;">console</span><span style="color:#999999;">.</span><span style="color:#59873A;">log</span><span style="color:#999999;">(</span><span style="color:#59873A;">getNum</span><span style="color:#999999;">())</span><span style="color:#393A34;">  </span><span style="color:#A0ADA0;">// 1</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>同样的执行 webpack 命令打包得到 bundle.js。</p><p>在 modules 对象 中 ./src/index.js 对应的属性值函数为：</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#758575DD;">// modules 对象中 ./src/index.js 对应函数</span></span>
<span class="line"><span style="color:#666666;">(</span><span style="color:#CB7676;">function</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span><span style="color:#BD976A;">module</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">__webpack_exports__</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">__webpack_require__</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">use strict</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#80A665;">eval</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">__webpack_require__.r(__webpack_exports__);</span><span style="color:#C99076;">\\n</span><span style="color:#C98A7D;">/* harmony import */ var _bar_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bar.js */ </span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">./src/bar.js</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">);</span><span style="color:#C99076;">\\n\\n\\n</span><span style="color:#C98A7D;">console.log(Object(_bar_js__WEBPACK_IMPORTED_MODULE_0__[</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">default</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">])())  // 1</span><span style="color:#C99076;">\\n\\n\\n</span><span style="color:#C98A7D;">//# sourceURL=webpack:///./src/index.js?</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#666666;">})</span></span>
<span class="line"><span style="color:#BD976A;">在</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">modules</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">对象</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">中</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">.</span><span style="color:#CB7676;">/</span><span style="color:#BD976A;">src</span><span style="color:#CB7676;">/</span><span style="color:#BD976A;">bar</span><span style="color:#666666;">.</span><span style="color:#BD976A;">js</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">对应的属性值函数为</span><span style="color:#666666;">:</span></span>
<span class="line"><span style="color:#758575DD;">// modules 对象中 ./src/bar.js 对应函数</span></span>
<span class="line"><span style="color:#666666;">(</span><span style="color:#CB7676;">function</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span><span style="color:#BD976A;">module</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">__webpack_exports__</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">__webpack_require__</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">use strict</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#80A665;">eval</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">__webpack_require__.r(__webpack_exports__);</span><span style="color:#C99076;">\\n</span><span style="color:#C98A7D;">var num = 1;</span><span style="color:#C99076;">\\n</span><span style="color:#C98A7D;">function getNum(){</span><span style="color:#C99076;">\\n</span><span style="color:#C98A7D;">  return num;</span><span style="color:#C99076;">\\n</span><span style="color:#C98A7D;">}</span><span style="color:#C99076;">\\n\\n</span><span style="color:#C98A7D;">/* harmony default export */ __webpack_exports__[</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">default</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">] = (getNum);</span><span style="color:#C99076;">\\n\\n</span><span style="color:#C98A7D;">//# sourceURL=webpack:///./src/bar.js?</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#666666;">})</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#A0ADA0;">// modules 对象中 ./src/index.js 对应函数</span></span>
<span class="line"><span style="color:#999999;">(</span><span style="color:#AB5959;">function</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#B07D48;">module</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">__webpack_exports__</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">__webpack_require__</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">use strict</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">eval</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">__webpack_require__.r(__webpack_exports__);</span><span style="color:#A65E2B;">\\n</span><span style="color:#B56959;">/* harmony import */ var _bar_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bar.js */ </span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">./src/bar.js</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">);</span><span style="color:#A65E2B;">\\n\\n\\n</span><span style="color:#B56959;">console.log(Object(_bar_js__WEBPACK_IMPORTED_MODULE_0__[</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">default</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">])())  // 1</span><span style="color:#A65E2B;">\\n\\n\\n</span><span style="color:#B56959;">//# sourceURL=webpack:///./src/index.js?</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#999999;">})</span></span>
<span class="line"><span style="color:#B07D48;">在</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">modules</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">对象</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">中</span><span style="color:#393A34;"> </span><span style="color:#999999;">.</span><span style="color:#AB5959;">/</span><span style="color:#B07D48;">src</span><span style="color:#AB5959;">/</span><span style="color:#B07D48;">bar</span><span style="color:#999999;">.</span><span style="color:#B07D48;">js</span><span style="color:#393A34;"> </span><span style="color:#59873A;">对应的属性值函数为</span><span style="color:#999999;">:</span></span>
<span class="line"><span style="color:#A0ADA0;">// modules 对象中 ./src/bar.js 对应函数</span></span>
<span class="line"><span style="color:#999999;">(</span><span style="color:#AB5959;">function</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#B07D48;">module</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">__webpack_exports__</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">__webpack_require__</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">use strict</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">eval</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">__webpack_require__.r(__webpack_exports__);</span><span style="color:#A65E2B;">\\n</span><span style="color:#B56959;">var num = 1;</span><span style="color:#A65E2B;">\\n</span><span style="color:#B56959;">function getNum(){</span><span style="color:#A65E2B;">\\n</span><span style="color:#B56959;">  return num;</span><span style="color:#A65E2B;">\\n</span><span style="color:#B56959;">}</span><span style="color:#A65E2B;">\\n\\n</span><span style="color:#B56959;">/* harmony default export */ __webpack_exports__[</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">default</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">] = (getNum);</span><span style="color:#A65E2B;">\\n\\n</span><span style="color:#B56959;">//# sourceURL=webpack:///./src/bar.js?</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#999999;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>对于 export.default 来说，其特性与 CommonJS 类似，输出也是以浅拷贝的方式来进行的，不同的是其是存储在 module.exports 中的 default 属性中的，而在入口文件中则是通过对象的 default 属性来访问的。</p>`,49),e=[o];function r(c,t,y,A,i,D){return n(),a("div",null,e)}const d=s(l,[["render",r]]);export{B as __pageData,d as default};
