import{_ as e,o as t,c as a,a as r}from"./app.2845802b.js";const c="/docs/lifecycle.png",v=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"01. Vue生命周期","slug":"_01-vue生命周期","link":"#_01-vue生命周期","children":[]},{"level":2,"title":"02. mounted 和 created 都是Vue实例的生命周期钩子，它们都可以用来在一个实例被创建出来之后执行代码。","slug":"_02-mounted-和-created-都是vue实例的生命周期钩子-它们都可以用来在一个实例被创建出来之后执行代码。","link":"#_02-mounted-和-created-都是vue实例的生命周期钩子-它们都可以用来在一个实例被创建出来之后执行代码。","children":[]}],"relativePath":"articles/vue/vue底层原理/01.生命周期.md"}'),d={name:"articles/vue/vue底层原理/01.生命周期.md"},_=r('<h2 id="_01-vue生命周期" tabindex="-1">01. Vue生命周期 <a class="header-anchor" href="#_01-vue生命周期" aria-hidden="true">#</a></h2><p><img src="'+c+'" alt="lifecycle"></p><h2 id="_02-mounted-和-created-都是vue实例的生命周期钩子-它们都可以用来在一个实例被创建出来之后执行代码。" tabindex="-1">02. mounted 和 created 都是Vue实例的生命周期钩子，它们都可以用来在一个实例被创建出来之后执行代码。 <a class="header-anchor" href="#_02-mounted-和-created-都是vue实例的生命周期钩子-它们都可以用来在一个实例被创建出来之后执行代码。" aria-hidden="true">#</a></h2><ul><li><p>不同点： 1.created 会在实例创建完成后被立即调用，而 mounted 会在挂载元素到实例上时被调用。 2.created 不会挂载 DOM 元素，而 mounted 会把实例挂载到 DOM 元素上。</p></li><li><p>应该使用： 1.created 适合在实例创建完成之后，进行数据的初始化，比如从后台获取数据，初始化实例的数据等。 2.mounted 适合在挂载 DOM 元素后，进行 DOM 操作，比如初始化插件，获取 DOM 元素属性等。</p></li></ul>',4),n=[_];function i(o,u,l,s,h,m){return t(),a("div",null,n)}const f=e(d,[["render",i]]);export{v as __pageData,f as default};
