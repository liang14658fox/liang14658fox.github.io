import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.681fc4ae.js";const h=JSON.parse('{"title":"类型转换","description":"","frontmatter":{"title":"类型转换"},"headers":[],"relativePath":"1_base_JavaScript/基本操作/064.数据类型互相转换.md","filePath":"1_base_JavaScript/基本操作/064.数据类型互相转换.md"}'),o={name:"1_base_JavaScript/基本操作/064.数据类型互相转换.md"},p=l(`<h2 id="_1-字符串-数字" tabindex="-1">1. <code>字符串</code> =&gt; <code>数字</code> <a class="header-anchor" href="#_1-字符串-数字" aria-label="Permalink to &quot;1. \`字符串\` =&gt; \`数字\`&quot;">​</a></h2><ol><li><p>使用 <code>parseInt(&#39;12&#39;)</code> 方法转换整型</p></li><li><p>使用 <code>parseFloat(&#39;3.12&#39;)</code> 转换浮点类型</p></li><li><p>使用 <code>Number()</code> 强制转换</p></li></ol><p>JS隐式转换</p><h2 id="_2-数字-字符串" tabindex="-1">2. <code>数字</code> =&gt; <code>字符串</code> <a class="header-anchor" href="#_2-数字-字符串" aria-label="Permalink to &quot;2. \`数字\` =&gt; \`字符串\`&quot;">​</a></h2><ol><li><p>使用 <code>num.toString()</code> 方法</p></li><li><p>使用 <code>String(num)</code> 方法</p></li><li><p>利用 <code>num + &#39;&#39;</code> 的技巧</p></li></ol><h2 id="_3-其他-布尔型" tabindex="-1">3. 其他 =&gt; <code>布尔型</code> <a class="header-anchor" href="#_3-其他-布尔型" aria-label="Permalink to &quot;3. 其他 =&gt; \`布尔型\`&quot;">​</a></h2><ol><li>使用Boolean()方法</li><li>在if(){}中使用</li></ol><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">[</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#E1E4E8;">	{ name: </span><span style="color:#9ECBFF;">&#39;hello&#39;</span><span style="color:#E1E4E8;"> }, </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#E1E4E8;">	{}, </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#9ECBFF;">&#39;hello&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// false</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#9ECBFF;">&#39;&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// false</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#79B8FF;">NaN</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// false</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// false</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#79B8FF;">undefined</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// false</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// false</span></span>
<span class="line"><span style="color:#E1E4E8;">]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">[</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#24292E;">	{ name: </span><span style="color:#032F62;">&#39;hello&#39;</span><span style="color:#24292E;"> }, </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#24292E;">	{}, </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#032F62;">&#39;hello&#39;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// false</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// false</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#005CC5;">NaN</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// false</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#005CC5;">null</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// false</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#005CC5;">undefined</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// false</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#005CC5;">false</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// false</span></span>
<span class="line"><span style="color:#24292E;">]</span></span></code></pre></div><h2 id="_4-对象-json" tabindex="-1">4. <code>对象</code> =&gt; <code>JSON</code> <a class="header-anchor" href="#_4-对象-json" aria-label="Permalink to &quot;4. \`对象\` =&gt; \`JSON\`&quot;">​</a></h2><ol><li><code>JSON.stringify()</code></li></ol><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> json </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span><span style="color:#9ECBFF;">&quot;name&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;iphone&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;price&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">666</span><span style="color:#E1E4E8;">}; </span><span style="color:#6A737D;">//创建对象；</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> jsonStr </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">JSON</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">stringify</span><span style="color:#E1E4E8;">(json);       </span><span style="color:#6A737D;">//转为JSON字符串</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(jsonStr);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> json </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;iphone&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;price&quot;</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">666</span><span style="color:#24292E;">}; </span><span style="color:#6A737D;">//创建对象；</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> jsonStr </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">JSON</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">stringify</span><span style="color:#24292E;">(json);       </span><span style="color:#6A737D;">//转为JSON字符串</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(jsonStr);</span></span></code></pre></div><h2 id="_5-json-对象" tabindex="-1">5. <code>JSON</code> =&gt; <code>对象</code> <a class="header-anchor" href="#_5-json-对象" aria-label="Permalink to &quot;5. \`JSON\` =&gt; \`对象\`&quot;">​</a></h2><ol><li><code>JSON.parse()</code></li></ol><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> jsonObj1 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">JSON</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">parse</span><span style="color:#E1E4E8;">(data);  </span><span style="color:#6A737D;">//使用JSON.parse() 将JSON字符串转为JS对象;</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(jsonObj1);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> jsonObj1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">JSON</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">parse</span><span style="color:#24292E;">(data);  </span><span style="color:#6A737D;">//使用JSON.parse() 将JSON字符串转为JS对象;</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(jsonObj1);</span></span></code></pre></div><ol start="2"><li><code>eval()</code></li></ol><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> jsonObj2 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">eval</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;(&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> data </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;)&#39;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">//使用eval() 将JSON字符串转为JS对象；</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(jsonObj2);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> jsonObj2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">eval</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;(&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> data </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;)&#39;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">//使用eval() 将JSON字符串转为JS对象；</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(jsonObj2);</span></span></code></pre></div><h2 id="_6-截取string前x位字符" tabindex="-1">6. 截取String前x位字符 <a class="header-anchor" href="#_6-截取string前x位字符" aria-label="Permalink to &quot;6. 截取String前x位字符&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> str </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;123456789&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(str.</span><span style="color:#B392F0;">slice</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">)) </span><span style="color:#6A737D;">//1234</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(str.</span><span style="color:#B392F0;">slice</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;">)) </span><span style="color:#6A737D;">//56</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> str </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;123456789&#39;</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(str.</span><span style="color:#6F42C1;">slice</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">)) </span><span style="color:#6A737D;">//1234</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(str.</span><span style="color:#6F42C1;">slice</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">6</span><span style="color:#24292E;">)) </span><span style="color:#6A737D;">//56</span></span></code></pre></div>`,18),e=[p];function t(c,r,y,E,i,d){return a(),n("div",null,e)}const u=s(o,[["render",t]]);export{h as __pageData,u as default};
