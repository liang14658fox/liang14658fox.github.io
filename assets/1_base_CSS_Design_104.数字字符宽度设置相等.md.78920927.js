import{_ as s,o as a,c as n,Q as e}from"./chunks/framework.681fc4ae.js";const h=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"1_base_CSS/Design/104.数字字符宽度设置相等.md","filePath":"1_base_CSS/Design/104.数字字符宽度设置相等.md"}'),l={name:"1_base_CSS/Design/104.数字字符宽度设置相等.md"},o=e(`<p>当我们在做倒计时或者从0开始增加到某一个数值的动画效果时，由于不同数字的宽度不同，在动画执行期间会发生文字不停的左右摆动的现象。</p><h2 id="将数字字符的宽度统一" tabindex="-1">将数字字符的宽度统一 <a class="header-anchor" href="#将数字字符的宽度统一" aria-label="Permalink to &quot;将数字字符的宽度统一&quot;">​</a></h2><ol><li>将字体设为等宽</li></ol><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">font-family</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;Helvetica Neue&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">font-family</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;Helvetica Neue&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><ol start="2"><li><code>font-feature-settings</code> 属性</li></ol><p><code>font-feature-settings</code> 属性可取的值： <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/font-variant-numeric" target="_blank" rel="noreferrer">https://developer.mozilla.org/en-US/docs/Web/CSS/font-variant-numeric</a></p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#79B8FF;">font-feature-settings</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&#39;tnum&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#005CC5;">font-feature-settings</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&#39;tnum&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div>`,7),p=[o];function t(c,r,i,d,_,E){return a(),n("div",null,p)}const u=s(l,[["render",t]]);export{h as __pageData,u as default};
