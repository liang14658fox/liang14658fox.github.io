import{_ as e,o as a,c as o,Q as l}from"./chunks/framework.681fc4ae.js";const m=JSON.parse('{"title":"--","description":"","frontmatter":{"title":"--"},"headers":[],"relativePath":"原生基础/Internet/协议/126.计算机网络协议.md","filePath":"原生基础/Internet/协议/126.计算机网络协议.md","lastUpdated":null}'),i={name:"原生基础/Internet/协议/126.计算机网络协议.md"},t=l('<h3 id="广泛的网络协议类型" tabindex="-1">广泛的网络协议类型 <a class="header-anchor" href="#广泛的网络协议类型" aria-label="Permalink to &quot;广泛的网络协议类型&quot;">​</a></h3><h2 id="网络通信协议" tabindex="-1">网络通信协议 <a class="header-anchor" href="#网络通信协议" aria-label="Permalink to &quot;网络通信协议&quot;">​</a></h2><p>通信协议允许网络设备之间进行基本的数据通信。</p><p>它们的用途包括在计算机之间或通过互联网传输文件，交换基于文本的消息，以及在路由器和外部或物联网设备之间建立通信。</p><p>通信协议的例子有:</p><ul><li>蓝牙协议</li><li>FTP</li><li>TCP / IP</li><li>HTTP</li></ul><h2 id="网络安全协议" tabindex="-1">网络安全协议 <a class="header-anchor" href="#网络安全协议" aria-label="Permalink to &quot;网络安全协议&quot;">​</a></h2><p>安全协议通过保证在网络上传输的数据不会被未经授权的用户访问来实现网络通信的安全性。   安全性是通过各种方法建立的，例如通过使用密码、身份验证协议或数据加密。</p><p>在设备之间的传输过程中可以对数据进行加密和保护，可以拒绝未知或未经授权的设备或用户访问。</p><p>安全协议的例子包括:</p><ul><li>HTTPS</li><li>SSL</li><li>SSH</li><li>SFTP</li></ul><h2 id="网络管理协议" tabindex="-1">网络管理协议 <a class="header-anchor" href="#网络管理协议" aria-label="Permalink to &quot;网络管理协议&quot;">​</a></h2><p>网络管理协议通过定义操作网络所需的过程来提供网络治理和维护。</p><p>它们应用于在给定网络中运行的所有设备上，如服务器、路由器和计算机，以有效地协调它们。   网络管理协议保证了每台设备之间以及与网络本身之间的连接，并保证了这些连接的稳定性。</p><p>它们通常用于故障排除和评估网络连接的质量。</p><p>网络管理协议的例子包括:</p><ul><li>SNMP</li><li>ICMP</li></ul><h2 id="axios、浏览器、xhr、js之间的关系" tabindex="-1">axios、浏览器、xhr、js之间的关系 <a class="header-anchor" href="#axios、浏览器、xhr、js之间的关系" aria-label="Permalink to &quot;axios、浏览器、xhr、js之间的关系&quot;">​</a></h2><ul><li>Javascript由三部分构成</li></ul><ol><li><p><code>ECMAScript</code>：描述了JS的语法和基本对象；</p></li><li><p><code>DOM</code>：文档对象模型，处理网页内容的方法和接口。是 <code>W3C</code> 的标准；</p></li><li><p><code>BOM</code>：浏览器对象模型，提供与浏览器交互的方法和接口。各个浏览器厂商根据 DOM在各自浏览器上的实现，表现为不同浏览器定义有差别，实现方式不同；</p></li></ol><ul><li>联系</li></ul><p><code>Window对象</code>：BOM的核心对象，包含 <code>Document对象</code>；</p><p><code>Window对象</code> 既是通过js访问浏览器窗口的一个接口，又是一个Global（全局）对象。这意味着在网页中定义的任何对象，变量和函数，都以window作为其global对象。</p><p><code>Document对象</code>：DOM的根本对象</p><p><code>Window对象</code> 包含属性：document、location、navigator、screen、history、frames</p><p><code>Document</code> 根节点包含子节点：forms、embeds、anchors、images、links</p>',26),r=[t];function c(d,n,p,s,h,_){return a(),o("div",null,r)}const P=e(i,[["render",c]]);export{m as __pageData,P as default};
