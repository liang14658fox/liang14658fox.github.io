import{_ as t,o,c as n,k as e,a as s}from"./chunks/framework.681fc4ae.js";const b=JSON.parse('{"title":"--","description":"","frontmatter":{"title":"--"},"headers":[],"relativePath":"原生基础/Internet/网络基础/跨域问题.md","filePath":"原生基础/Internet/网络基础/跨域问题.md","lastUpdated":1719474694000}'),c={name:"原生基础/Internet/网络基础/跨域问题.md"},l=e("div",{class:"warning custom-block"},[e("p",{class:"custom-block-title"},"WARNING"),e("p",null,"此文档暂未更新")],-1),a=e("blockquote",null,[e("p",null,[s("参考文章 "),e("a",{href:"https://cloud.tencent.com/developer/article/1953193",target:"_blank",rel:"noreferrer"},"https://cloud.tencent.com/developer/article/1953193")])],-1),r=e("p",null,"在前端开发中，跨域是指在浏览器中，当一个网页的脚本尝试从一个源（域名、协议、端口）去访问另一个源的资源时，就会产生跨域问题。这是由于浏览器的同源策略（Same-Origin Policy）所限制的。同源策略是一种安全机制，它限制了一个页面从一个源加载的文档或脚本如何与来自另一个源的资源进行交互。",-1),_=e("p",null,"换句话说，如果你的网页脚本在加载一个资源时，资源的源与你的网页的源不同，那么浏览器会阻止这种跨域请求，以防止恶意行为或数据泄露。",-1),d=e("p",null,"跨域问题可以通过使用跨域资源共享（CORS）、JSONP、代理服务器等方法来解决。",-1),i=[l,a,r,_,d];function p(u,m,h,f,k,N){return o(),n("div",null,i)}const g=t(c,[["render",p]]);export{b as __pageData,g as default};
