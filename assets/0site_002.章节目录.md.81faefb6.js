import{_ as e,o,c as a,Q as l}from"./chunks/framework.681fc4ae.js";const m=JSON.parse('{"title":"目录","description":"","frontmatter":{"title":"目录"},"headers":[],"relativePath":"0site/002.章节目录.md","filePath":"0site/002.章节目录.md","lastUpdated":null}'),i={name:"0site/002.章节目录.md"},c=l('<h2 id="本站介绍" tabindex="-1">本站介绍 <a class="header-anchor" href="#本站介绍" aria-label="Permalink to &quot;本站介绍&quot;">​</a></h2><p>欢迎来到liang14658fox个人技术文档博客网站。</p><p>我记录的是我平时写代码、阅读博客、技术文档的时候所遇到的一些我自身 遗忘/没学/易错 的知识网络，以此查漏补缺，也希望能对你有帮助。</p><blockquote><p>从难度上分为: 基础、进阶、高级；</p></blockquote><blockquote><p>从功能上分为: 用于日常工作开发中复用以加快开发效率、知识点的总结与查漏补缺；</p></blockquote><blockquote><p>从内容上分为: 前端进阶路线、windows&amp;macOS系统下项目的环境搭建以及构建部署的文档、加快开发进度的模板和规范；</p></blockquote><ul><li><p>在线地址：<a href="https://liang14658fox.github.io/" target="_blank" rel="noreferrer">https://liang14658fox.github.io/</a></p></li><li><p>GitHub：<a href="https://github.com/liang14658fox/liang14658fox.github.io/tree/master" target="_blank" rel="noreferrer">https://github.com/liang14658fox/liang14658fox.github.io/tree/master</a></p></li></ul><h2 id="front-end-framework" tabindex="-1">Front-end Framework <a class="header-anchor" href="#front-end-framework" aria-label="Permalink to &quot;Front-end Framework&quot;">​</a></h2><ol><li><code>React</code></li><li><code>Vue.js</code> 用于构建用户界面的 JavaScript 框架</li><li><code>Angular</code></li></ol><h2 id="mobile" tabindex="-1">Mobile <a class="header-anchor" href="#mobile" aria-label="Permalink to &quot;Mobile&quot;">​</a></h2><ol><li><code>React Native</code></li></ol><h2 id="desktop" tabindex="-1">Desktop <a class="header-anchor" href="#desktop" aria-label="Permalink to &quot;Desktop&quot;">​</a></h2><ol><li><code>Electron</code></li></ol><h2 id="build-tools-构建工具" tabindex="-1">Build Tools 构建工具 <a class="header-anchor" href="#build-tools-构建工具" aria-label="Permalink to &quot;Build Tools 构建工具&quot;">​</a></h2><ol><li><code>Vite</code></li><li><code>esbuild</code></li><li><code>Webpack</code></li><li><code>Turbopack</code> Webpack 创始人推出比Webpack快700倍的<code>构建工具</code></li></ol><h2 id="node-js-frameworks" tabindex="-1">Node.js Frameworks <a class="header-anchor" href="#node-js-frameworks" aria-label="Permalink to &quot;Node.js Frameworks&quot;">​</a></h2><ol><li><code>Next.js</code></li></ol><h2 id="state-management-状态管理" tabindex="-1">State Management 状态管理 <a class="header-anchor" href="#state-management-状态管理" aria-label="Permalink to &quot;State Management 状态管理&quot;">​</a></h2><ol><li><code>Vuex</code> 是一个专为 Vue.js 应用程序开发的<code>状态管理模式</code> + <code>库</code></li></ol><h2 id="库" tabindex="-1">库 <a class="header-anchor" href="#库" aria-label="Permalink to &quot;库&quot;">​</a></h2><ol><li><code>Apache ECharts</code> 一个基于 JavaScript 的开源可视化<code>图表库</code></li><li><code>Element UI</code> 一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端<code>组件库</code></li><li><code>G2Plot</code> 是开箱即用、易于配置、具有良好视觉和交互体验的通用统计<code>图表库</code></li><li><code>jQuery</code> jQuery is a fast, small, and feature-rich <code>JavaScript library</code></li><li><code>Axios</code> Axios 是一个基于 promise 的<code>网络请求库</code></li><li><code>Element Plus</code> 基于 Vue 3.0 的桌面端<code>组件库</code></li><li><code>Ant Design</code></li></ol><h2 id="环境" tabindex="-1">环境 <a class="header-anchor" href="#环境" aria-label="Permalink to &quot;环境&quot;">​</a></h2><ol><li><code>Node.js</code> 是一个基于 Chrome V8 引擎的 JavaScript 运行环境</li></ol><h2 id="规范" tabindex="-1">规范 <a class="header-anchor" href="#规范" aria-label="Permalink to &quot;规范&quot;">​</a></h2><ol><li><code>CommonJs</code> 是一种<code>模块化的规范</code>，包括现在的NodeJs里面也采用了部分CommonJs语法在里面</li></ol><h2 id="包管理器" tabindex="-1">包管理器 <a class="header-anchor" href="#包管理器" aria-label="Permalink to &quot;包管理器&quot;">​</a></h2><ol><li><code>npm</code> 是Node的开放式模块登记和管理系统，是Node.js包的标准发布平台，用于Node.js包的发布、传播、依赖控制</li><li><code>pnpm</code></li><li><code>yarn</code></li></ol><h2 id="技术" tabindex="-1">技术 <a class="header-anchor" href="#技术" aria-label="Permalink to &quot;技术&quot;">​</a></h2><ol><li><code>AJAX</code> Ajax是一种用于创建快速动态网页的<code>技术</code></li></ol><h2 id="语言" tabindex="-1">语言 <a class="header-anchor" href="#语言" aria-label="Permalink to &quot;语言&quot;">​</a></h2><ol><li><code>HTML</code> 是用来描述网页的一种语言。HTML不是一种编程语言，而是一种<code>标记语言</code>（markup language）。标记语言是一套标记标签（markup tag）</li><li><code>CSS</code> 是一种描述 HTML 文档样式的<code>语言</code></li><li><code>JavaScript</code> 是全球最流行的<code>编程语言</code></li><li><code>TypeScript</code> 是一门编程语言，但它不是一个「独立」的编程语言，而是基于JavaScript扩展的语言</li><li><code>ECMAScript</code> 是一种由ECMA国际通过 ECMA-262 标准化的<code>脚本程序设计语言</code>，它是JavaScript的标准</li><li><code>XML</code> Extensible Markup Language 是一种类似于 HTML，但是没有使用预定义标记的<code>语言</code>，XML 指<code>可扩展标记语言</code></li><li><code>XHTML</code> 指的是可扩展超文本<code>标记语言</code></li></ol><h2 id="格式" tabindex="-1">格式 <a class="header-anchor" href="#格式" aria-label="Permalink to &quot;格式&quot;">​</a></h2><ol><li><code>SVG</code> 图像格式，可应用于HTML</li></ol><h2 id="协议" tabindex="-1">协议 <a class="header-anchor" href="#协议" aria-label="Permalink to &quot;协议&quot;">​</a></h2><ol><li><code>TCP/IP</code> 是针对因特网的<code>通信协议</code></li><li><code>HTTP</code> Hyper Text Transfer Protocol（超文本传输协议）,是用于从万维网服务器传输超文本到本地浏览器的<code>传送协议</code>。是互联网上应用最为广泛的一种<code>网络协议</code></li></ol><h2 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-label="Permalink to &quot;API&quot;">​</a></h2><ol><li><code>Web API</code> 是浏览器提供的一套操作浏览器功能和页面元素得 API（BOM 和 DOM）</li><li><code>DOM</code> Document Object Model ，<code>文档对象模型</code>。一种独立于语言，用于操作xml，html文档的<code>应用编程接口</code></li><li><code>BOM</code> Browser Object Model，<code>浏览器对象模型</code>。BOM 是为了控制浏览器的行为而出现的<code>接口</code></li><li><code>XMLHttpRequest</code> 是一个浏览器接口</li></ol><h2 id="css预处理器" tabindex="-1">CSS预处理器 <a class="header-anchor" href="#css预处理器" aria-label="Permalink to &quot;CSS预处理器&quot;">​</a></h2><ol><li><code>sass</code> <a href="https://sass-lang.com/" target="_blank" rel="noreferrer">https://sass-lang.com/</a></li><li><code>scss</code></li><li><code>less</code> <a href="https://lesscss.org/" target="_blank" rel="noreferrer">https://lesscss.org/</a></li></ol><div class="info custom-block"><p class="custom-block-title">定义</p><p>CSS 预处理器是一个能让你通过预处理器自己独有的语法来生成CSS的程序。市面上有很多 CSS 预处理器可供选择，且绝大多数 CSS 预处理器会增加一些原生 CSS 不具备的特性，例如代码混合，嵌套选择器，继承选择器等。这些特性让 CSS 的结构更加具有可读性且易于维护。</p><p>要使用 CSS 预处理器，你必须在 web 服务中服务器安装 CSS 编译工具。</p></div><h2 id="static-sites-静态网站生成器" tabindex="-1">Static Sites 静态网站生成器 <a class="header-anchor" href="#static-sites-静态网站生成器" aria-label="Permalink to &quot;Static Sites 静态网站生成器&quot;">​</a></h2><ol><li><code>VitePress</code></li><li><code>VuePress</code></li><li><code>Docusaurus</code></li></ol><h2 id="其他" tabindex="-1">其他 <a class="header-anchor" href="#其他" aria-label="Permalink to &quot;其他&quot;">​</a></h2><ol><li><code>Bable</code></li><li><code>JSX</code> JavaScript XML 是js内定义的一套XML语法</li></ol>',44),d=[c];function t(r,s,n,h,u,b){return o(),a("div",null,d)}const f=e(i,[["render",t]]);export{m as __pageData,f as default};
