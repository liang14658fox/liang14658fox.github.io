import{_ as e,o as i,c as l,Q as a}from"./chunks/framework.681fc4ae.js";const p=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"原生基础/JavaScript/JS数组的操作方法大全/JS原生数组方法查询表字典.md","filePath":"原生基础/JavaScript/JS数组的操作方法大全/JS原生数组方法查询表字典.md","lastUpdated":1724385104000}'),t={name:"原生基础/JavaScript/JS数组的操作方法大全/JS原生数组方法查询表字典.md"},s=a('<h2 id="改变原始数组的操作方法" tabindex="-1">改变原始数组的操作方法： <a class="header-anchor" href="#改变原始数组的操作方法" aria-label="Permalink to &quot;改变原始数组的操作方法：&quot;">​</a></h2><ul><li>push：向数组末尾添加元素，并返回新的长度</li><li>pop：删除最后一个并返回删除的元素</li><li>unshift：向数组开头添加元素，并返回新的长度</li><li>shift：将第一个元素删除并且返回删除元素，空即为 undefined</li><li>reverse：颠倒数组顺序</li><li>sort：对数组排序</li><li>splice：删，增，替换数组元素，返回被删除数组，无删除则不返回</li></ul><h2 id="不会改变原始数组的操作方法" tabindex="-1">不会改变原始数组的操作方法： <a class="header-anchor" href="#不会改变原始数组的操作方法" aria-label="Permalink to &quot;不会改变原始数组的操作方法：&quot;">​</a></h2><ul><li>concat：连接多个数组，返回新的数组</li><li>join：将数组中所有元素以参数作为分隔符放入一个字符</li><li>slice：返回选定元素</li><li>map(es6)：数组映射为新的数组</li><li>filter(es6)：数组过滤，返回所有通过方法判断后(判断为 true 时)生成的新数组</li><li>forEach：数组遍历，没有返回值</li><li>every(es6)：对数组中的每一项运行给定函数，如每一项均为 true 时返回 true，否则返回 false</li><li>some(es6)：数组中的的元素运行给定函数，如其中有一项为 true 时返回 true，此时剩余的元素不会再执行检测，如果所以都为 false 则返回 false</li><li>find(es6)：寻找数组中符合测试方法（函数）条件的第一个元素，并且返回该元素</li><li>reduce(es6)：方法接收一个函数作为累加器，数组中的每个值（从左到右）开始缩减，最终计算为一个值。</li><li>indexOf: 方法返回在数组中可以找到一个给定元素的第一个索引，如果不存在，则返回-1。</li><li>includes(es7)：方法用来判断一个数组是否包含一个指定的值，根据情况，如果包含则返回 true，否则返回 false。</li></ul>',4),r=[s];function _(o,c,n,d,u,f){return i(),l("div",null,r)}const S=e(t,[["render",_]]);export{p as __pageData,S as default};
