import{_ as e,o,c as a,Q as c}from"./chunks/framework.681fc4ae.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"10structure/DAG/210.图的布局.md","filePath":"10structure/DAG/210.图的布局.md"}'),i={name:"10structure/DAG/210.图的布局.md"},l=c('<h2 id="简介" tabindex="-1">简介 <a class="header-anchor" href="#简介" aria-label="Permalink to &quot;简介&quot;">​</a></h2><p>图是一种常见的数据结构和表示形式，可视化场景也经常会用到图来展现有关联关系的数据。进行图的可视化时，往往需要将其自动布局，而针对不同的问题和场景，需要不同的布局方法。本文主要介绍图的层次布局的思路。</p><ul><li>一些常用的图的布局方法:</li></ul><ol><li><code>层次布局</code></li><li><code>力导向布局</code></li><li><code>Grid网格布局</code></li><li><code>辐射布局</code></li><li><code>环形布局</code></li><li><code>同心圆布局</code></li></ol><h2 id="图的层次布局-sugiyama-布局" tabindex="-1">图的层次布局（Sugiyama 布局） <a class="header-anchor" href="#图的层次布局-sugiyama-布局" aria-label="Permalink to &quot;图的层次布局（Sugiyama 布局）&quot;">​</a></h2><p>在数据有一定层级结构或先后顺序时，经常会用到层次布局来展现，一般对应的数据结构是 <code>DAG</code> （ <code>Directed Acyclic Graph</code> ，即有向无环图）。</p><ul><li>常用的场景包括：</li></ul><ol><li><code>流程图</code></li><li><code>组织架构图</code></li><li><code>状态转移图</code></li></ol><p>层次布局也被称为 <code>Sugiyama布局</code>。</p>',9),t=[l];function d(r,_,s,n,u,p){return o(),a("div",null,t)}const f=e(i,[["render",d]]);export{m as __pageData,f as default};
