import{_ as s,o as a,c as l,a as e}from"./app.1de0ee66.js";const F=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"文件上传流程","slug":"文件上传流程","link":"#文件上传流程","children":[]},{"level":2,"title":"el-upload中的fileList解析。","slug":"el-upload中的filelist解析。","link":"#el-upload中的filelist解析。","children":[]},{"level":2,"title":"用upload提交文件的两种方式：","slug":"用upload提交文件的两种方式","link":"#用upload提交文件的两种方式","children":[]},{"level":2,"title":"业务需求逻辑","slug":"业务需求逻辑","link":"#业务需求逻辑","children":[]},{"level":2,"title":"1. 图片预览","slug":"_1-图片预览","link":"#_1-图片预览","children":[]},{"level":2,"title":"2. 文件上传实时进度追踪显示","slug":"_2-文件上传实时进度追踪显示","link":"#_2-文件上传实时进度追踪显示","children":[]},{"level":2,"title":"3. 上传前钩子函数","slug":"_3-上传前钩子函数","link":"#_3-上传前钩子函数","children":[]}],"relativePath":"documentcatalog/c_uimaptools/b_elementTool/11.文件上传.md"}'),n={name:"documentcatalog/c_uimaptools/b_elementTool/11.文件上传.md"},t=e(`<ul><li>el-upload element官方文档 <a href="https://element.eleme.cn/#/zh-CN/component/upload" target="_blank" rel="noreferrer">https://element.eleme.cn/#/zh-CN/component/upload</a></li></ul><h2 id="文件上传流程" tabindex="-1">文件上传流程 <a class="header-anchor" href="#文件上传流程" aria-hidden="true">#</a></h2><table><thead><tr><th><strong>文件数量</strong></th><th><strong>业务自动流程</strong></th><th><strong>提交文件方式</strong></th></tr></thead><tbody><tr><td>单个文件</td><td>选择文件后直接自动上传至服务器</td><td>action提交</td></tr><tr><td>多个文件</td><td>选择文件后，然后提交表单给服务器</td><td>axios自定义提交</td></tr></tbody></table><h2 id="el-upload中的filelist解析。" tabindex="-1">el-upload中的fileList解析。 <a class="header-anchor" href="#el-upload中的filelist解析。" aria-hidden="true">#</a></h2><ul><li>vue实例中的 <code>fileList</code></li></ul><p>name： url：文件的地址，这里element官网提供的模板中，这个url是一个链接，那么，如果url是本地地址呢？</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">data</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">            fileList</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> [</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">food1.jpeg</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> url</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="用upload提交文件的两种方式" tabindex="-1">用upload提交文件的两种方式： <a class="header-anchor" href="#用upload提交文件的两种方式" aria-hidden="true">#</a></h2><ol><li>用action=&#39;url’方式</li></ol><blockquote><p>使用element的文件模块时，使用了手动上传的方法，官网上的示例是直接使用 <code>this.$refs.upload.submit()</code> 直接请求后台，直接在action属性中写出后台地址即可，但是这种方式无法获取后台响应结果。</p></blockquote><ol start="2"><li>用 <code>:http-request</code> 方式</li></ol><blockquote><p>element官方的解释 <code>:http-request</code> 覆盖默认的上传行为，可以自定义上传的实现，可以提交后获取后台的相应结果。</p></blockquote><div class="tip custom-block"><p class="custom-block-title">怎么得到文件对象？</p><ol><li>可以通过ref获取上传的文件对象，添加到FormData对象中，用axios提交。</li></ol><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> file </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">$refs</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">upload</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">uploadFiles</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">pop</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">raw</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">//这里获取上传的文件对象</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ol start="2"><li>可以通过this.fileList获得文件上传对象，然后条件到FormData对象中。</li></ol></div><ol start="3"><li>用 <code>on-change</code> 属性，文件列表变化时，将文件赋值给fileList，调用axios接口提交。</li></ol><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="业务需求逻辑" tabindex="-1">业务需求逻辑 <a class="header-anchor" href="#业务需求逻辑" aria-hidden="true">#</a></h2><h2 id="_1-图片预览" tabindex="-1">1. 图片预览 <a class="header-anchor" href="#_1-图片预览" aria-hidden="true">#</a></h2><h2 id="_2-文件上传实时进度追踪显示" tabindex="-1">2. 文件上传实时进度追踪显示 <a class="header-anchor" href="#_2-文件上传实时进度追踪显示" aria-hidden="true">#</a></h2><h2 id="_3-上传前钩子函数" tabindex="-1">3. 上传前钩子函数 <a class="header-anchor" href="#_3-上传前钩子函数" aria-hidden="true">#</a></h2><ul><li><p>限制文件数量</p></li><li><p>限制文件类型</p></li><li><p>限制文件大小</p></li></ul>`,21),o=[t];function p(r,i,c,d,u,h){return a(),l("div",null,o)}const y=s(n,[["render",p]]);export{F as __pageData,y as default};
