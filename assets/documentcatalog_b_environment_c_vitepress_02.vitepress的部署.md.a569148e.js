import{_ as n,o as e,c as p,b as s,e as l,t,a as i}from"./app.d85211b5.js";const r="/image-20221104193643226.png",o="/image-20221104193704157.png",c="/111.png",g="/image-20221104195045358.png",d="/image-20221104195308679.png",F=JSON.parse('{"title":"Vitepress的部署","description":"","frontmatter":{"title":"Vitepress的部署"},"headers":[{"level":2,"title":"什么是Git Page","slug":"什么是git-page","link":"#什么是git-page","children":[]},{"level":2,"title":"实现项目自动推送到Github","slug":"实现项目自动推送到github","link":"#实现项目自动推送到github","children":[]},{"level":2,"title":"用Github Pages部署项目","slug":"用github-pages部署项目","link":"#用github-pages部署项目","children":[]},{"level":2,"title":"如何用刚刚完成的Vitepress项目更新博客","slug":"如何用刚刚完成的vitepress项目更新博客","link":"#如何用刚刚完成的vitepress项目更新博客","children":[]}],"relativePath":"documentcatalog/b_environment/c_vitepress/02.vitepress的部署.md"}'),b={name:"documentcatalog/b_environment/c_vitepress/02.vitepress的部署.md"},h={id:"frontmatter-title",tabindex:"-1"},u=s("a",{class:"header-anchor",href:"#frontmatter-title","aria-hidden":"true"},"#",-1),m=i('<h2 id="什么是git-page" tabindex="-1">什么是Git Page <a class="header-anchor" href="#什么是git-page" aria-hidden="true">#</a></h2><p>github Pages可以被认为是用户编写的、托管在github上的静态网页。</p><p>github pages有300M免费空间，资料自己管理，保存可靠；</p><h2 id="实现项目自动推送到github" tabindex="-1">实现项目自动推送到Github <a class="header-anchor" href="#实现项目自动推送到github" aria-hidden="true">#</a></h2><p>在github网站注册登陆并新建仓库。</p><p>仓库名称必须为 <code>自己的github的id\\.github\\.io</code></p><p>之后将刚刚写好的vitepress源项目推送到main分支，再创建一个master分支用于保存推送的网页。</p><p>如何将本地项目推送到gituhb仓库？=&gt;</p><p>如何在github新建master分支并推送项目？=&gt;</p><p><img src="'+r+'" alt="image-20221104193643226"></p><p><img src="'+o+`" alt="image-20221104193704157"></p><p>回到刚刚的项目里，编写一个自动部署脚本deploy.sh，该脚本完成两件事。</p><ol><li>将项目build成一个可以发布的网页的形式，（通过github pages可以直接展示到外网）。</li><li>将build出来的代码，推送到项目的master分支中。</li></ol><p>脚本的内容如下，该脚本存放在项目最外层，与docs文件夹处于同一级，详情请见vitepress官网部署教程，直接复制然后将里面的推送地址改为自己的github仓库的master分支即可。</p><div class="warning custom-block"><p class="custom-block-title">踩坑提示</p></div><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 忽略错误</span></span>
<span class="line"><span style="color:#82AAFF;">set</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-e</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 构建</span></span>
<span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">docs:build</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 进入待发布的目录</span></span>
<span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">docs/.vitepress/dist</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">init</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">add</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-A</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">commit</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-m</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">deploy</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 如果部署到 https://&lt;USERNAME&gt;.github.io</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">push</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-f</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git@github.com:</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">USERNAM</span><span style="color:#A6ACCD;">E</span><span style="color:#89DDFF;">&gt;</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">USERNAM</span><span style="color:#A6ACCD;">E</span><span style="color:#89DDFF;">&gt;</span><span style="color:#C3E88D;">.github.io.git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">master</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>如果你是windows操作系统，想要运行这个脚本，请先下载并且配置git bash</p><p>官网 <a href="https://gitforwindows.org/" target="_blank" rel="noreferrer">https://gitforwindows.org/</a> 安装教程很多我就不给了</p><p>之后运行再cmd里，输入如下命令执行脚本</p><div class="language-cmd line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cmd</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">./deploy.sh</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>如果运行成功那么项目将会被推送到你刚刚创建项目的中</p><h2 id="用github-pages部署项目" tabindex="-1">用Github Pages部署项目 <a class="header-anchor" href="#用github-pages部署项目" aria-hidden="true">#</a></h2><p>我们已经有了可以自动更新的项目，我们需要将项目部署到公网，让大家看到我们搭建的博客</p><p>点开刚刚创建的项目，点击setting按钮，进入pages界面</p><p><img src="`+c+'" alt="111"></p><p>选择Deploy from a branch就是从一个分支中部署项目，选择master分支，如果选择（/root）文件夹就是根目录，然后点击save即可</p><p><img src="'+g+'" alt="image-20221104195045358"></p><p>等待一段事件后，我们的项目跑起来了，你可以在 自己github的id.github.io 查看到刚刚发布的项目</p><div class="danger custom-block"><p class="custom-block-title">跑不起来？</p><p>部署到GitHub Pages上，反正我是只看到了一个md文件，貌似项目没执行，只显示一个根目录下的md静态文件。</p><p>关键词：gitHub Action、GitHub Pages、Travis CI</p></div><p>这个项目是实时更新的不需要你重新部署操作，你要做的就是更新你的master分支即可</p><p>以下是作者的项目： <a href="https://aiai0603.github.io/" target="_blank" rel="noreferrer">https://aiai0603.github.io/</a></p><p><img src="'+d+'" alt="image-20221104195308679"></p><h2 id="如何用刚刚完成的vitepress项目更新博客" tabindex="-1">如何用刚刚完成的Vitepress项目更新博客 <a class="header-anchor" href="#如何用刚刚完成的vitepress项目更新博客" aria-hidden="true">#</a></h2><p>完成搭建以后接下来要做的很简单了</p><ol><li>完成一篇md格式的文章，放在对应的文件夹下面</li><li>更新你的路由和侧边栏，将刚刚完成的文章放上去</li><li>调用sh脚本，把刚刚写完的内容build后推送到master</li><li>等待片卡 github pages就会自动更新，点击网站查看即可</li><li>记得将自己的源程序实时更新到main分支中，将源代码开源和托管也是一个好习惯</li></ol><p>好了至此你已经有了一个可以使用更新的简单博客了！</p><p>但是我们面临几个问题：</p><ul><li>每次都要改侧边栏，太麻烦了</li><li>界面不能定制，我想更加炫酷一点怎么办，我不想只写md文件</li></ul><p>ok！接下来的教程中我们将逐步解决问题</p>',39);function y(a,C,D,A,_,v){return e(),p("div",null,[s("h1",h,[l(t(a.$frontmatter.title)+" ",1),u]),m])}const f=n(b,[["render",y]]);export{F as __pageData,f as default};
