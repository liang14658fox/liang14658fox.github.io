import{_ as o,C as e,o as c,c as t,H as a,k as l,a as n,Q as p}from"./chunks/framework.681fc4ae.js";const A=JSON.parse('{"title":"对象数组基础操作","description":"","frontmatter":{"title":"对象数组基础操作"},"headers":[],"relativePath":"1_base_JavaScript/待完善待分类/079.对象数组.md","filePath":"1_base_JavaScript/待完善待分类/079.对象数组.md"}'),r={name:"1_base_JavaScript/待完善待分类/079.对象数组.md"},E=p(`<h2 id="删除对象数组中指定属性等于指定数组元素的对象" tabindex="-1">删除对象数组中指定属性等于指定数组元素的对象 <a class="header-anchor" href="#删除对象数组中指定属性等于指定数组元素的对象" aria-label="Permalink to &quot;删除对象数组中指定属性等于指定数组元素的对象&quot;">​</a></h2><blockquote><p>假设你有一个对象数组 <code>objects</code>，每个对象都有一个名为 <code>name</code> 的属性，以及一个数组 <code>names</code>，包含了需要删除的对象的 <code>name</code> 值。 你可以使用 <code>filter()</code> 函数来过滤出不包含需要删除的对象的新数组。</p></blockquote><p>示例函数：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">removeObjectsByName</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">objects</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">names</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> objects.</span><span style="color:#B392F0;">filter</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">obj</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">names.</span><span style="color:#B392F0;">includes</span><span style="color:#E1E4E8;">(obj.name));</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">removeObjectsByName</span><span style="color:#24292E;">(</span><span style="color:#E36209;">objects</span><span style="color:#24292E;">, </span><span style="color:#E36209;">names</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> objects.</span><span style="color:#6F42C1;">filter</span><span style="color:#24292E;">(</span><span style="color:#E36209;">obj</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">!</span><span style="color:#24292E;">names.</span><span style="color:#6F42C1;">includes</span><span style="color:#24292E;">(obj.name));</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>这个函数使用 <code>filter()</code> 函数遍历对象数组 <code>objects</code>，并返回一个新数组，其中不包含与 <code>names</code> 数组中的元素对应的对象。 示例用法：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> objects </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span></span>
<span class="line"><span style="color:#E1E4E8;">  { name: </span><span style="color:#9ECBFF;">&#39;John&#39;</span><span style="color:#E1E4E8;">, age: </span><span style="color:#79B8FF;">25</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">  { name: </span><span style="color:#9ECBFF;">&#39;Alice&#39;</span><span style="color:#E1E4E8;">, age: </span><span style="color:#79B8FF;">30</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">  { name: </span><span style="color:#9ECBFF;">&#39;Bob&#39;</span><span style="color:#E1E4E8;">, age: </span><span style="color:#79B8FF;">35</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">  { name: </span><span style="color:#9ECBFF;">&#39;John&#39;</span><span style="color:#E1E4E8;">, age: </span><span style="color:#79B8FF;">40</span><span style="color:#E1E4E8;"> }</span></span>
<span class="line"><span style="color:#E1E4E8;">];</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> names </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span><span style="color:#9ECBFF;">&#39;John&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;Alice&#39;</span><span style="color:#E1E4E8;">];</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> filteredObjects </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">removeObjectsByName</span><span style="color:#E1E4E8;">(objects, names);</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(filteredObjects);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> objects </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">  { name: </span><span style="color:#032F62;">&#39;John&#39;</span><span style="color:#24292E;">, age: </span><span style="color:#005CC5;">25</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">  { name: </span><span style="color:#032F62;">&#39;Alice&#39;</span><span style="color:#24292E;">, age: </span><span style="color:#005CC5;">30</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">  { name: </span><span style="color:#032F62;">&#39;Bob&#39;</span><span style="color:#24292E;">, age: </span><span style="color:#005CC5;">35</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">  { name: </span><span style="color:#032F62;">&#39;John&#39;</span><span style="color:#24292E;">, age: </span><span style="color:#005CC5;">40</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> names </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#032F62;">&#39;John&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;Alice&#39;</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> filteredObjects </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">removeObjectsByName</span><span style="color:#24292E;">(objects, names);</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(filteredObjects);</span></span></code></pre></div><p>输出结果：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">[</span></span>
<span class="line"><span style="color:#E1E4E8;">  { name: </span><span style="color:#9ECBFF;">&#39;Bob&#39;</span><span style="color:#E1E4E8;">, age: </span><span style="color:#79B8FF;">35</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">  { name: </span><span style="color:#9ECBFF;">&#39;John&#39;</span><span style="color:#E1E4E8;">, age: </span><span style="color:#79B8FF;">40</span><span style="color:#E1E4E8;"> }</span></span>
<span class="line"><span style="color:#E1E4E8;">]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">[</span></span>
<span class="line"><span style="color:#24292E;">  { name: </span><span style="color:#032F62;">&#39;Bob&#39;</span><span style="color:#24292E;">, age: </span><span style="color:#005CC5;">35</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">  { name: </span><span style="color:#032F62;">&#39;John&#39;</span><span style="color:#24292E;">, age: </span><span style="color:#005CC5;">40</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#24292E;">]</span></span></code></pre></div>`,8),y={id:"提取对象数组中部分属性-并更换键名-组成新对象",tabindex:"-1"},i=l("a",{class:"header-anchor",href:"#提取对象数组中部分属性-并更换键名-组成新对象","aria-label":'Permalink to "提取对象数组中部分属性，并更换键名，组成新对象 <Badge type="tip" text="^finished" />"'},"​",-1),d=p(`<blockquote><p>现有一个对象数组 <code>OriginArray</code> ，提取这个数组中的每一个对象的任意数量的指定键值对的值，赋予他们新的键名（或者取旧键名）， 输出新的对象数组。</p></blockquote><p>示例对象数组 <code>OriginArray</code>：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark has-highlighted-lines vp-code-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> OriginArray </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">        oldId:</span><span style="color:#9ECBFF;">&#39;007&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">        oldName:</span><span style="color:#9ECBFF;">&#39;小火猴&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        uselessData:</span><span style="color:#9ECBFF;">&#39;useless&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span></span>
<span class="line"><span style="color:#E1E4E8;">        oldId:</span><span style="color:#9ECBFF;">&#39;001&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        oldName:</span><span style="color:#9ECBFF;">&#39;果冻鸭&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        uselessData:</span><span style="color:#9ECBFF;">&#39;useless&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">]</span></span></code></pre><pre class="shiki github-light has-highlighted-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> OriginArray </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">    {</span></span>
<span class="line highlighted"><span style="color:#24292E;">        oldId:</span><span style="color:#032F62;">&#39;007&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line highlighted"><span style="color:#24292E;">        oldName:</span><span style="color:#032F62;">&#39;小火猴&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        uselessData:</span><span style="color:#032F62;">&#39;useless&#39;</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    {</span></span>
<span class="line"><span style="color:#24292E;">        oldId:</span><span style="color:#032F62;">&#39;001&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        oldName:</span><span style="color:#032F62;">&#39;果冻鸭&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        uselessData:</span><span style="color:#032F62;">&#39;useless&#39;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">]</span></span></code></pre></div><p>期望输出结果：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark has-highlighted-lines vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">[</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">        newUUID:</span><span style="color:#9ECBFF;">&#39;007&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">        newName:</span><span style="color:#9ECBFF;">&#39;小火猴&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span></span>
<span class="line"><span style="color:#E1E4E8;">        newUUID:</span><span style="color:#9ECBFF;">&#39;001&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        newName:</span><span style="color:#9ECBFF;">&#39;果冻鸭&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">]</span></span></code></pre><pre class="shiki github-light has-highlighted-lines vp-code-light"><code><span class="line"><span style="color:#24292E;">[</span></span>
<span class="line"><span style="color:#24292E;">    {</span></span>
<span class="line highlighted"><span style="color:#24292E;">        newUUID:</span><span style="color:#032F62;">&#39;007&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line highlighted"><span style="color:#24292E;">        newName:</span><span style="color:#032F62;">&#39;小火猴&#39;</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    {</span></span>
<span class="line"><span style="color:#24292E;">        newUUID:</span><span style="color:#032F62;">&#39;001&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        newName:</span><span style="color:#032F62;">&#39;果冻鸭&#39;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">]</span></span></code></pre></div><p>算法：</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-KW7fK" id="tab-0S2ZrWw" checked="checked"><label for="tab-0S2ZrWw">方案一</label><input type="radio" name="group-KW7fK" id="tab-_Zk0dE9"><label for="tab-_Zk0dE9">方案二</label></div><div class="blocks"><div class="language-js vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark has-highlighted-lines vp-code-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> resultArray </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> OriginArray.</span><span style="color:#B392F0;">map</span><span style="color:#E1E4E8;">((</span><span style="color:#FFAB70;">item</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">index</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> Object.</span><span style="color:#B392F0;">assign</span><span style="color:#E1E4E8;">({}, {</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">		</span><span style="color:#9ECBFF;">&#39;newUUID&#39;</span><span style="color:#E1E4E8;">: item.oldId,</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">		</span><span style="color:#9ECBFF;">&#39;newName&#39;</span><span style="color:#E1E4E8;">: item.oldName</span></span>
<span class="line"><span style="color:#E1E4E8;">	})</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(resultArray)</span></span></code></pre><pre class="shiki github-light has-highlighted-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> resultArray </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> OriginArray.</span><span style="color:#6F42C1;">map</span><span style="color:#24292E;">((</span><span style="color:#E36209;">item</span><span style="color:#24292E;">, </span><span style="color:#E36209;">index</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> Object.</span><span style="color:#6F42C1;">assign</span><span style="color:#24292E;">({}, {</span></span>
<span class="line highlighted"><span style="color:#24292E;">		</span><span style="color:#032F62;">&#39;newUUID&#39;</span><span style="color:#24292E;">: item.oldId,</span></span>
<span class="line highlighted"><span style="color:#24292E;">		</span><span style="color:#032F62;">&#39;newName&#39;</span><span style="color:#24292E;">: item.oldName</span></span>
<span class="line"><span style="color:#24292E;">	})</span></span>
<span class="line"><span style="color:#24292E;">})</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(resultArray)</span></span></code></pre></div><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark has-highlighted-lines vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> NewArray </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> []</span></span>
<span class="line"><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> index </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">; index </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.OriginArray.</span><span style="color:#79B8FF;">length</span><span style="color:#E1E4E8;">; index</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">	NewArray.</span><span style="color:#B392F0;">push</span><span style="color:#E1E4E8;">({</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">		NewID: </span><span style="color:#9ECBFF;">&#39;&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">		NewName: </span><span style="color:#9ECBFF;">&#39;&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">	});</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">	NewArray[index].NewName </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> OriginArray[index].oldName;</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">	NewArray[index].NewID </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> OriginArray[index].oldID;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(NewArray)</span></span></code></pre><pre class="shiki github-light has-highlighted-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> NewArray </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> []</span></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> index </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; index </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.OriginArray.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;">; index</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">	NewArray.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">({</span></span>
<span class="line highlighted"><span style="color:#24292E;">		NewID: </span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line highlighted"><span style="color:#24292E;">		NewName: </span><span style="color:#032F62;">&#39;&#39;</span></span>
<span class="line"><span style="color:#24292E;">	});</span></span>
<span class="line highlighted"><span style="color:#24292E;">	NewArray[index].NewName </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> OriginArray[index].oldName;</span></span>
<span class="line highlighted"><span style="color:#24292E;">	NewArray[index].NewID </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> OriginArray[index].oldID;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(NewArray)</span></span></code></pre></div></div></div>`,7);function h(g,F,m,b,u,C){const s=e("Badge");return c(),t("div",null,[a(s,{type:"tip",text:"^finished"}),E,l("h2",y,[n("提取对象数组中部分属性，并更换键名，组成新对象 "),a(s,{type:"tip",text:"^finished"}),n(),i]),d])}const B=o(r,[["render",h]]);export{A as __pageData,B as default};
